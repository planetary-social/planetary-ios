
#if TARGET_OS_SIMULATOR

#if 0
#elif defined(__x86_64__) && __x86_64__
// Generated by Apple Swift version 5.1 (swiftlang-1100.0.270.13 clang-1100.0.33.7)
#pragma clang diagnostic push
#pragma clang diagnostic ignored "-Wgcc-compat"

#if !defined(__has_include)
# define __has_include(x) 0
#endif
#if !defined(__has_attribute)
# define __has_attribute(x) 0
#endif
#if !defined(__has_feature)
# define __has_feature(x) 0
#endif
#if !defined(__has_warning)
# define __has_warning(x) 0
#endif

#if __has_include(<swift/objc-prologue.h>)
# include <swift/objc-prologue.h>
#endif

#pragma clang diagnostic ignored "-Wauto-import"
#include <Foundation/Foundation.h>
#include <stdint.h>
#include <stddef.h>
#include <stdbool.h>

#if !defined(SWIFT_TYPEDEFS)
# define SWIFT_TYPEDEFS 1
# if __has_include(<uchar.h>)
#  include <uchar.h>
# elif !defined(__cplusplus)
typedef uint_least16_t char16_t;
typedef uint_least32_t char32_t;
# endif
typedef float swift_float2  __attribute__((__ext_vector_type__(2)));
typedef float swift_float3  __attribute__((__ext_vector_type__(3)));
typedef float swift_float4  __attribute__((__ext_vector_type__(4)));
typedef double swift_double2  __attribute__((__ext_vector_type__(2)));
typedef double swift_double3  __attribute__((__ext_vector_type__(3)));
typedef double swift_double4  __attribute__((__ext_vector_type__(4)));
typedef int swift_int2  __attribute__((__ext_vector_type__(2)));
typedef int swift_int3  __attribute__((__ext_vector_type__(3)));
typedef int swift_int4  __attribute__((__ext_vector_type__(4)));
typedef unsigned int swift_uint2  __attribute__((__ext_vector_type__(2)));
typedef unsigned int swift_uint3  __attribute__((__ext_vector_type__(3)));
typedef unsigned int swift_uint4  __attribute__((__ext_vector_type__(4)));
#endif

#if !defined(SWIFT_PASTE)
# define SWIFT_PASTE_HELPER(x, y) x##y
# define SWIFT_PASTE(x, y) SWIFT_PASTE_HELPER(x, y)
#endif
#if !defined(SWIFT_METATYPE)
# define SWIFT_METATYPE(X) Class
#endif
#if !defined(SWIFT_CLASS_PROPERTY)
# if __has_feature(objc_class_property)
#  define SWIFT_CLASS_PROPERTY(...) __VA_ARGS__
# else
#  define SWIFT_CLASS_PROPERTY(...)
# endif
#endif

#if __has_attribute(objc_runtime_name)
# define SWIFT_RUNTIME_NAME(X) __attribute__((objc_runtime_name(X)))
#else
# define SWIFT_RUNTIME_NAME(X)
#endif
#if __has_attribute(swift_name)
# define SWIFT_COMPILE_NAME(X) __attribute__((swift_name(X)))
#else
# define SWIFT_COMPILE_NAME(X)
#endif
#if __has_attribute(objc_method_family)
# define SWIFT_METHOD_FAMILY(X) __attribute__((objc_method_family(X)))
#else
# define SWIFT_METHOD_FAMILY(X)
#endif
#if __has_attribute(noescape)
# define SWIFT_NOESCAPE __attribute__((noescape))
#else
# define SWIFT_NOESCAPE
#endif
#if __has_attribute(warn_unused_result)
# define SWIFT_WARN_UNUSED_RESULT __attribute__((warn_unused_result))
#else
# define SWIFT_WARN_UNUSED_RESULT
#endif
#if __has_attribute(noreturn)
# define SWIFT_NORETURN __attribute__((noreturn))
#else
# define SWIFT_NORETURN
#endif
#if !defined(SWIFT_CLASS_EXTRA)
# define SWIFT_CLASS_EXTRA
#endif
#if !defined(SWIFT_PROTOCOL_EXTRA)
# define SWIFT_PROTOCOL_EXTRA
#endif
#if !defined(SWIFT_ENUM_EXTRA)
# define SWIFT_ENUM_EXTRA
#endif
#if !defined(SWIFT_CLASS)
# if __has_attribute(objc_subclassing_restricted)
#  define SWIFT_CLASS(SWIFT_NAME) SWIFT_RUNTIME_NAME(SWIFT_NAME) __attribute__((objc_subclassing_restricted)) SWIFT_CLASS_EXTRA
#  define SWIFT_CLASS_NAMED(SWIFT_NAME) __attribute__((objc_subclassing_restricted)) SWIFT_COMPILE_NAME(SWIFT_NAME) SWIFT_CLASS_EXTRA
# else
#  define SWIFT_CLASS(SWIFT_NAME) SWIFT_RUNTIME_NAME(SWIFT_NAME) SWIFT_CLASS_EXTRA
#  define SWIFT_CLASS_NAMED(SWIFT_NAME) SWIFT_COMPILE_NAME(SWIFT_NAME) SWIFT_CLASS_EXTRA
# endif
#endif
#if !defined(SWIFT_RESILIENT_CLASS)
# if __has_attribute(objc_class_stub)
#  define SWIFT_RESILIENT_CLASS(SWIFT_NAME) SWIFT_CLASS(SWIFT_NAME) __attribute__((objc_class_stub))
#  define SWIFT_RESILIENT_CLASS_NAMED(SWIFT_NAME) __attribute__((objc_class_stub)) SWIFT_CLASS_NAMED(SWIFT_NAME)
# else
#  define SWIFT_RESILIENT_CLASS(SWIFT_NAME) SWIFT_CLASS(SWIFT_NAME)
#  define SWIFT_RESILIENT_CLASS_NAMED(SWIFT_NAME) SWIFT_CLASS_NAMED(SWIFT_NAME)
# endif
#endif

#if !defined(SWIFT_PROTOCOL)
# define SWIFT_PROTOCOL(SWIFT_NAME) SWIFT_RUNTIME_NAME(SWIFT_NAME) SWIFT_PROTOCOL_EXTRA
# define SWIFT_PROTOCOL_NAMED(SWIFT_NAME) SWIFT_COMPILE_NAME(SWIFT_NAME) SWIFT_PROTOCOL_EXTRA
#endif

#if !defined(SWIFT_EXTENSION)
# define SWIFT_EXTENSION(M) SWIFT_PASTE(M##_Swift_, __LINE__)
#endif

#if !defined(OBJC_DESIGNATED_INITIALIZER)
# if __has_attribute(objc_designated_initializer)
#  define OBJC_DESIGNATED_INITIALIZER __attribute__((objc_designated_initializer))
# else
#  define OBJC_DESIGNATED_INITIALIZER
# endif
#endif
#if !defined(SWIFT_ENUM_ATTR)
# if defined(__has_attribute) && __has_attribute(enum_extensibility)
#  define SWIFT_ENUM_ATTR(_extensibility) __attribute__((enum_extensibility(_extensibility)))
# else
#  define SWIFT_ENUM_ATTR(_extensibility)
# endif
#endif
#if !defined(SWIFT_ENUM)
# define SWIFT_ENUM(_type, _name, _extensibility) enum _name : _type _name; enum SWIFT_ENUM_ATTR(_extensibility) SWIFT_ENUM_EXTRA _name : _type
# if __has_feature(generalized_swift_name)
#  define SWIFT_ENUM_NAMED(_type, _name, SWIFT_NAME, _extensibility) enum _name : _type _name SWIFT_COMPILE_NAME(SWIFT_NAME); enum SWIFT_COMPILE_NAME(SWIFT_NAME) SWIFT_ENUM_ATTR(_extensibility) SWIFT_ENUM_EXTRA _name : _type
# else
#  define SWIFT_ENUM_NAMED(_type, _name, SWIFT_NAME, _extensibility) SWIFT_ENUM(_type, _name, _extensibility)
# endif
#endif
#if !defined(SWIFT_UNAVAILABLE)
# define SWIFT_UNAVAILABLE __attribute__((unavailable))
#endif
#if !defined(SWIFT_UNAVAILABLE_MSG)
# define SWIFT_UNAVAILABLE_MSG(msg) __attribute__((unavailable(msg)))
#endif
#if !defined(SWIFT_AVAILABILITY)
# define SWIFT_AVAILABILITY(plat, ...) __attribute__((availability(plat, __VA_ARGS__)))
#endif
#if !defined(SWIFT_WEAK_IMPORT)
# define SWIFT_WEAK_IMPORT __attribute__((weak_import))
#endif
#if !defined(SWIFT_DEPRECATED)
# define SWIFT_DEPRECATED __attribute__((deprecated))
#endif
#if !defined(SWIFT_DEPRECATED_MSG)
# define SWIFT_DEPRECATED_MSG(...) __attribute__((deprecated(__VA_ARGS__)))
#endif
#if __has_feature(attribute_diagnose_if_objc)
# define SWIFT_DEPRECATED_OBJC(Msg) __attribute__((diagnose_if(1, Msg, "warning")))
#else
# define SWIFT_DEPRECATED_OBJC(Msg) SWIFT_DEPRECATED_MSG(Msg)
#endif
#if !defined(IBSegueAction)
# define IBSegueAction
#endif
#if __has_feature(modules)
#if __has_warning("-Watimport-in-framework-header")
#pragma clang diagnostic ignored "-Watimport-in-framework-header"
#endif
@import AVFoundation;
@import CommonUISDK;
@import Foundation;
@import ObjectiveC;
@import UIKit;
@import ZendeskProviderSDK;
#endif

#import <ZendeskSDK/ZendeskSDK.h>

#pragma clang diagnostic ignored "-Wproperty-attribute-mismatch"
#pragma clang diagnostic ignored "-Wduplicate-method-arg"
#if __has_warning("-Wpragma-clang-attribute")
# pragma clang diagnostic ignored "-Wpragma-clang-attribute"
#endif
#pragma clang diagnostic ignored "-Wunknown-pragmas"
#pragma clang diagnostic ignored "-Wnullability"

#if __has_attribute(external_source_symbol)
# pragma push_macro("any")
# undef any
# pragma clang attribute push(__attribute__((external_source_symbol(language="Swift", defined_in="ZendeskSDK",generated_declaration))), apply_to=any(function,enum,objc_interface,objc_category,objc_protocol))
# pragma pop_macro("any")
#endif








/// Data class used to configure Article Screen
/// version:
/// 2.3.0
SWIFT_CLASS_NAMED("ArticleUiConfiguration")
@interface ZDKArticleUiConfiguration : NSObject <ZDKUiConfiguration>
- (nonnull instancetype)init OBJC_DESIGNATED_INITIALIZER;
/// Show the <code>Contact Support</code> button in the help center’s article view
/// version:
/// 2.3.0
@property (nonatomic) BOOL showContactOptions;
/// Hide the <code>Contact Support</code> button in the help center’s article views
/// version:
/// 2.3.0
@property (nonatomic) BOOL hideContactSupport SWIFT_DEPRECATED_MSG("use showContactOptions instead");
/// The <code>Contact Support</code> button on the Help Center Article screen will route to the “Answer Bot” screen,
/// if set to <code>true</code> and the <code>AnswerBot</code> SDK is present. Otherwise, we will route to <code>RequestUI</code> screen.
/// <code>true</code> by default
/// version:
/// 2.4.0
@property (nonatomic) BOOL deflectionEnabled;
@end

@protocol ZDKContainerChildControllerDelegate;

SWIFT_PROTOCOL_NAMED("ContainerChild")
@protocol ZDKContainerChild <NSObject>
@property (nonatomic, strong) id <ZDKContainerChildControllerDelegate> _Nullable childDelegate;
@end

@class UINavigationItem;

SWIFT_PROTOCOL_NAMED("ContainerChildControllerDelegate")
@protocol ZDKContainerChildControllerDelegate <NSObject>
- (void)willDismiss;
@property (nonatomic, readonly, strong) UINavigationItem * _Nullable navItem;
@end

@class NSBundle;
@class NSCoder;

SWIFT_CLASS("_TtC10ZendeskSDK23ContainerViewController")
@interface ContainerViewController : UIViewController
- (void)viewDidLoad;
- (nonnull instancetype)initWithNibName:(NSString * _Nullable)nibNameOrNil bundle:(NSBundle * _Nullable)nibBundleOrNil OBJC_DESIGNATED_INITIALIZER;
- (nullable instancetype)initWithCoder:(NSCoder * _Nonnull)coder OBJC_DESIGNATED_INITIALIZER;
@end


@interface ContainerViewController (SWIFT_EXTENSION(ZendeskSDK)) <ZDKContainerChildControllerDelegate>
@property (nonatomic, readonly, strong) UINavigationItem * _Nullable navItem;
- (void)willDismiss;
@end

@protocol ZDKCoordinator;

SWIFT_CLASS_NAMED("CoordinatingViewController")
@interface ZDKCoordinatingViewController : ContainerViewController
- (nonnull instancetype)initWithCoordinator:(id <ZDKCoordinator> _Nonnull)coordinator OBJC_DESIGNATED_INITIALIZER;
- (nullable instancetype)initWithCoder:(NSCoder * _Nonnull)aDecoder SWIFT_UNAVAILABLE;
- (void)viewDidLoad;
- (void)viewWillAppear:(BOOL)animated;
- (void)viewDidAppear:(BOOL)animated;
- (void)viewDidDisappear:(BOOL)animated;
- (nonnull instancetype)initWithNibName:(NSString * _Nullable)nibNameOrNil bundle:(NSBundle * _Nullable)nibBundleOrNil SWIFT_UNAVAILABLE;
@end


SWIFT_PROTOCOL_NAMED("Coordinator")
@protocol ZDKCoordinator
- (void)startWithPresent:(void (^ _Nonnull)(UIViewController <ZDKContainerChild> * _Nonnull))present with:(id <ZDKContainerChildControllerDelegate> _Nonnull)containerDelegate;
@end

@class UINavigationController;
@class UIBarButtonItem;

SWIFT_CLASS_NAMED("DismissUtil")
@interface ZDKDismissUtil : NSObject
/// Decide based on the contents of the nav stack whether to pop
/// the given view controller off the stack, or whether to
/// dismiss the given view controller.
/// \param viewController a view controller which should be removed from a screen.
///
/// \param navigationController a navigation controller for inspection.
///
+ (void)remove:(UIViewController * _Nullable)viewController from:(UINavigationController * _Nullable)navigationController;
+ (BOOL)navigationController:(UINavigationController * _Nullable)navigationController didPush:(UIViewController * _Nullable)viewController SWIFT_WARN_UNUSED_RESULT;
+ (UIBarButtonItem * _Nonnull)barButtonFor:(UIViewController * _Nonnull)viewController embededIn:(UINavigationController * _Nullable)navigationController action:(SEL _Nonnull)action SWIFT_WARN_UNUSED_RESULT;
- (nonnull instancetype)init OBJC_DESIGNATED_INITIALIZER;
@end

/// Enum that represents the file types that zendesk supports
typedef SWIFT_ENUM_NAMED(NSInteger, ZDKFileType, "FileType", open) {
  ZDKFileTypePng = 0,
  ZDKFileTypeJpg = 1,
  ZDKFileTypePdf = 2,
  ZDKFileTypePlain = 3,
  ZDKFileTypeWord = 4,
  ZDKFileTypeExcel = 5,
  ZDKFileTypePowerpoint = 6,
  ZDKFileTypePowerpointX = 7,
  ZDKFileTypeKeynote = 8,
  ZDKFileTypePages = 9,
  ZDKFileTypeNumbers = 10,
  ZDKFileTypeBinary = 11,
  ZDKFileTypeHeic = 12,
};

@protocol ZDKHelpCenterArticleRatingStateProtocol;

SWIFT_CLASS("_TtC10ZendeskSDK30HelpCenterArticleVotingHandler")
@interface HelpCenterArticleVotingHandler : NSObject <ZDKHelpCenterArticleRatingHandlerProtocol>
- (nonnull instancetype)initWithArticleId:(NSString * _Nonnull)articleId andLocale:(NSString * _Nonnull)locale;
- (void)articleRatingVoteSelected:(id <ZDKHelpCenterArticleRatingStateProtocol> _Nonnull)ratingState atIndex:(NSInteger)index;
- (NSInteger)currentArticleVote SWIFT_WARN_UNUSED_RESULT;
- (nonnull instancetype)init SWIFT_UNAVAILABLE;
+ (nonnull instancetype)new SWIFT_UNAVAILABLE_MSG("-init is unavailable");
@end

@class ZDKZendesk;

SWIFT_CLASS_NAMED("HelpCenterContactUsRouter")
@interface ZDKHelpCenterContactUsRouter : NSObject
- (nonnull instancetype)initWithPresentingViewController:(UIViewController * _Nonnull)presentingViewController uiConfigs:(NSArray<id <ZDKUiConfiguration>> * _Nonnull)uiConfigs zendesk:(ZDKZendesk * _Nonnull)zendesk isDeflectionEnabled:(BOOL)isDeflectionEnabled OBJC_DESIGNATED_INITIALIZER;
- (void)decideButtonActionForNavBar;
- (void)decideButtonActionForEmptySearch;
- (nonnull instancetype)init SWIFT_UNAVAILABLE;
+ (nonnull instancetype)new SWIFT_UNAVAILABLE_MSG("-init is unavailable");
@end


SWIFT_CLASS_NAMED("HelpCenterCoordinator")
@interface ZDKHelpCenterCoordinator : NSObject <ZDKCoordinator>
- (nonnull instancetype)initWithHelpCenterController:(UIViewController <ZDKContainerChild> * _Nonnull)helpCenterController uiConfigurations:(NSArray<id <ZDKUiConfiguration>> * _Nonnull)uiConfigurations OBJC_DESIGNATED_INITIALIZER;
- (void)startWithPresent:(void (^ _Nonnull)(UIViewController <ZDKContainerChild> * _Nonnull))present with:(id <ZDKContainerChildControllerDelegate> _Nonnull)containerDelegate;
- (nonnull instancetype)init SWIFT_UNAVAILABLE;
+ (nonnull instancetype)new SWIFT_UNAVAILABLE_MSG("-init is unavailable");
@end

@class NSNumber;
@class ZDKHelpCenterOverviewContentModel;

/// Data class used to configure Help Center
/// version:
/// 2.0.0
SWIFT_CLASS_NAMED("HelpCenterUiConfiguration")
@interface ZDKHelpCenterUiConfiguration : NSObject <ZDKUiConfiguration>
/// A list of labels to which must be present for an article to show up in the list.
/// The labels combined with AND
/// version:
/// 2.0.0
@property (nonatomic, copy) NSArray<NSString *> * _Nonnull labels;
/// The type of ids being used.
/// version:
/// 2.0.0
@property (nonatomic) ZDKHelpCenterOverviewGroupType groupType;
/// Hide the <code>Contact Support</code> button in the Help Center empty search result screen
/// false by default
/// version:
/// 2.0.0
@property (nonatomic) BOOL hideContactSupport SWIFT_DEPRECATED_MSG("use showContactOptionsOnEmptySearch instead");
/// Show the <code>Contact Support</code> button in the Help Center main screen
/// true by default
/// version:
/// 2.4.0
@property (nonatomic) BOOL showContactOptions;
/// Show the <code>Contact Support</code> button in the Help Center empty search result screen
/// true by default
/// version:
/// 2.4.0
@property (nonatomic) BOOL showContactOptionsOnEmptySearch;
/// The <code>Contact Support</code> button on the Help Center Main screen and the ‘Contact Support’
/// on the Empty Search screen will route to the “Answer Bot” screen, if set to
/// <code>true</code> and the <code>AnswerBot</code> SDK is present. Otherwise, we will route to <code>RequestUI</code> screen.
/// <code>true</code> by default.
/// version:
/// 2.4.0
@property (nonatomic) BOOL deflectionEnabled;
/// A list of ids. Only show articles contained in the categories/sections.
/// version:
/// 2.0.0
@property (nonatomic, copy) NSArray<NSNumber *> * _Nonnull groupIds;
@property (nonatomic, readonly, strong) ZDKHelpCenterOverviewContentModel * _Nonnull overviewContentModel;
/// Returns a default model. To customize the content, update properties on a default model.
/// @return A default content model.
/// version:
/// 2.0.0
- (nonnull instancetype)init OBJC_DESIGNATED_INITIALIZER;
@end






/// Creates an attachment to be uploaded when a request is created
/// version:
/// 2.0.0
SWIFT_CLASS_NAMED("RequestAttachment")
@interface ZDKRequestAttachment : NSObject
/// Name of the file to be uploaded
/// version:
/// 2.0.0
@property (nonatomic, readonly, copy) NSString * _Nonnull filename;
/// Data of the file contents to be uploaded
/// version:
/// 2.0.0
@property (nonatomic, readonly, copy) NSData * _Nonnull data;
/// Type of the file to be uploaded
/// version:
/// 2.0.0
@property (nonatomic, readonly) enum ZDKFileType fileType;
/// Generates a new state from the old state and an action
/// version:
/// 2.0.0
/// \param filename the name of the file to be uploaded, without the file extension
///
/// \param data the data of the contents of the file to be uploaded
///
/// \param fileType the type of the file to be uploaded
///
///
/// returns:
/// an instance of RequestAttachment
- (nonnull instancetype)initWithFilename:(NSString * _Nonnull)filename data:(NSData * _Nonnull)data fileType:(enum ZDKFileType)fileType OBJC_DESIGNATED_INITIALIZER;
- (nonnull instancetype)init SWIFT_UNAVAILABLE;
+ (nonnull instancetype)new SWIFT_UNAVAILABLE_MSG("-init is unavailable");
@end


SWIFT_CLASS("_TtC10ZendeskSDK18RequestCoordinator")
@interface RequestCoordinator : NSObject <ZDKCoordinator>
- (void)startWithPresent:(void (^ _Nonnull)(UIViewController <ZDKContainerChild> * _Nonnull))present with:(id <ZDKContainerChildControllerDelegate> _Nonnull)containerDelegate;
- (nonnull instancetype)init SWIFT_UNAVAILABLE;
+ (nonnull instancetype)new SWIFT_UNAVAILABLE_MSG("-init is unavailable");
@end


/// Used to build view controller for ticketing. The returned objects must be presented inside a UINavigationController.
/// The containing navigation controller can be presented any way you see fit.
/// version:
/// 2.0.0
SWIFT_CLASS_NAMED("RequestUi")
@interface ZDKRequestUi : NSObject
/// Build the Request List. This is a list of a users tickets.
/// Conversations must be enabled in your Zendesk SDK admin settings. Conversations are not available on Essential.
/// version:
/// 2.0.0
+ (UIViewController * _Nonnull)buildRequestList SWIFT_WARN_UNUSED_RESULT;
/// Build the Request List with a list of UiConfigurations.
/// Conversations must be enabled in your Zendesk SDK admin settings. Conversations are not available on Essential.
/// version:
/// 2.0.0
/// \param configurations A list of UiConfiguration objects. You do not need to configure the controller being presented.
///
+ (UIViewController * _Nonnull)buildRequestListWith:(NSArray<id <ZDKUiConfiguration>> * _Nonnull)configurations SWIFT_WARN_UNUSED_RESULT;
/// Build the Request Ui. This allows users to create and respond to individual tickets.
/// version:
/// 2.0.0
+ (UIViewController * _Nonnull)buildRequestUi SWIFT_WARN_UNUSED_RESULT;
/// Build the Request Ui with a list of UiConfigurations.
/// version:
/// 2.0.0
/// \param configurations A list of UiConfiguration objects. You do not need to configure the controller being presented.
///
+ (UIViewController * _Nonnull)buildRequestUiWith:(NSArray<id <ZDKUiConfiguration>> * _Nonnull)configurations SWIFT_WARN_UNUSED_RESULT;
/// Build the Request Ui. This allows users to create and respond to individual tickets.
/// version:
/// 2.0.0
/// \param requestId The ID of the ticket to display.
///
+ (UIViewController * _Nonnull)buildRequestUiWithRequestId:(NSString * _Nonnull)requestId SWIFT_WARN_UNUSED_RESULT;
/// Build the Request Ui with a list of UiConfigurations.
/// version:
/// 2.0.0
/// \param requestId The ID of the ticket to display.
///
/// \param configurations A list of UiConfiguration objects. You do not need to configure the controller being presented.
///
+ (UIViewController * _Nonnull)buildRequestUiWithRequestId:(NSString * _Nonnull)requestId configurations:(NSArray<id <ZDKUiConfiguration>> * _Nonnull)configurations SWIFT_WARN_UNUSED_RESULT;
- (nonnull instancetype)init OBJC_DESIGNATED_INITIALIZER;
@end

@class ZDKCustomField;

/// Data class used to configure Ticketing
/// version:
/// 2.0.0
SWIFT_CLASS_NAMED("RequestUiConfiguration")
@interface ZDKRequestUiConfiguration : NSObject <ZDKUiConfiguration>
/// The Subject of any tickets created
/// version:
/// 2.0.0
@property (nonatomic, copy) NSString * _Nonnull subject;
/// Tags set in any created tickets
/// version:
/// 2.0.0
@property (nonatomic, copy) NSArray<NSString *> * _Nonnull tags;
/// Custom Fields set in any created tickets
/// version:
/// 4.0.0
@property (nonatomic, copy) NSArray<ZDKCustomField *> * _Nonnull customFields;
/// The ticket form of any created tickets.
/// If this property is set <code>fields</code> must also be set. Any ticket fields set will be associated with <code>tickerFormID</code>.
/// version:
/// 2.0.0
@property (nonatomic, strong) NSNumber * _Nullable ticketFormID;
/// A list of RequestAttachments sent with any created tickets.
/// Note: These files are treated as any other. They will be displayed in the UI
/// and the user will be able to remove them.
/// version:
/// 2.0.0
@property (nonatomic, copy) NSArray<ZDKRequestAttachment *> * _Nonnull fileAttachments;
/// Returns a default model. To customisze the content, update properties on a default model.
/// version:
/// 2.0.0
- (nonnull instancetype)init OBJC_DESIGNATED_INITIALIZER;
@end


/// Used to enable <a href="https://github.com/zendesk/Suas-iOS">Suas</a> logging.
/// Suas drives most of the Ticketing UI so the Suas logs can be useful for debugging it.
/// Enabling the Suas logger produces a lot of information and will slow down the SDK.
/// version:
/// 2.0.0
SWIFT_CLASS_NAMED("SuasDebugLogger")
@interface ZDKSuasDebugLogger : NSObject
/// Toggle the Suas debug logging
/// version:
/// 2.0.0
SWIFT_CLASS_PROPERTY(@property (nonatomic, class) BOOL enabled;)
+ (BOOL)enabled SWIFT_WARN_UNUSED_RESULT;
+ (void)setEnabled:(BOOL)newValue;
- (nonnull instancetype)init OBJC_DESIGNATED_INITIALIZER;
@end


SWIFT_CLASS_NAMED("SupportUI")
@interface ZDKSupportUI : NSObject
/// Locale override for help center
@property (nonatomic, copy) NSString * _Nullable helpCenterLocaleOverride;
/// Initialize the SupportUI singleton with the Zendesk singleton
/// from ZendeskCoreSDK
+ (void)initializeWithZendesk:(ZDKZendesk * _Nullable)zendesk;
/// Get the API instance (singleton).
SWIFT_CLASS_PROPERTY(@property (nonatomic, class, readonly, strong) ZDKSupportUI * _Nullable instance;)
+ (ZDKSupportUI * _Nullable)instance SWIFT_WARN_UNUSED_RESULT;
/// This method can be used to aid in handling push notifications relating to requests.
/// This method can result in a dynamic update in the request UI. For this occur,
/// the push notification and the on screen request must contain matching request ids.
/// This method will return true only in the case of a successful UI update.
/// A return value of false means that the push notification was unhandled.
/// At this point you can decided how best to update the user based on the contents of the notification.
/// \param requestId The ID of the request to refresh
///
///
/// returns:
/// A boolean indicating whether the Request Detail Screen has been refresh or not.
- (BOOL)refreshRequestWithRequestId:(NSString * _Nonnull)requestId SWIFT_WARN_UNUSED_RESULT;
- (nonnull instancetype)init SWIFT_UNAVAILABLE;
+ (nonnull instancetype)new SWIFT_UNAVAILABLE_MSG("-init is unavailable");
@end

@class UIColor;

/// Used to style the SDK.
/// Set the currentTheme.primaryColor to style the UI.
/// version:
/// 2.0.0
SWIFT_CLASS_NAMED("Theme")
@interface ZDKTheme : NSObject
/// The theme currently applied to the SDK.
/// version:
/// 2.0.0
SWIFT_CLASS_PROPERTY(@property (nonatomic, class, readonly, strong) ZDKTheme * _Nonnull currentTheme;)
+ (ZDKTheme * _Nonnull)currentTheme SWIFT_WARN_UNUSED_RESULT;
/// The primary color of the SDK.
/// This is applied as a tint to various UI components
/// version:
/// 2.0.0
@property (nonatomic, strong) UIColor * _Nonnull primaryColor;
- (nonnull instancetype)init OBJC_DESIGNATED_INITIALIZER;
@end






























SWIFT_CLASS("_TtC10ZendeskSDK12ZDKConstants")
@interface ZDKConstants : NSObject
+ (UIColor * _Nonnull)colorForToast SWIFT_WARN_UNUSED_RESULT;
- (nonnull instancetype)init OBJC_DESIGNATED_INITIALIZER;
@end





#if __has_attribute(external_source_symbol)
# pragma clang attribute pop
#endif
#pragma clang diagnostic pop

#elif defined(__i386__) && __i386__
// Generated by Apple Swift version 5.1 (swiftlang-1100.0.270.13 clang-1100.0.33.7)
#pragma clang diagnostic push
#pragma clang diagnostic ignored "-Wgcc-compat"

#if !defined(__has_include)
# define __has_include(x) 0
#endif
#if !defined(__has_attribute)
# define __has_attribute(x) 0
#endif
#if !defined(__has_feature)
# define __has_feature(x) 0
#endif
#if !defined(__has_warning)
# define __has_warning(x) 0
#endif

#if __has_include(<swift/objc-prologue.h>)
# include <swift/objc-prologue.h>
#endif

#pragma clang diagnostic ignored "-Wauto-import"
#include <Foundation/Foundation.h>
#include <stdint.h>
#include <stddef.h>
#include <stdbool.h>

#if !defined(SWIFT_TYPEDEFS)
# define SWIFT_TYPEDEFS 1
# if __has_include(<uchar.h>)
#  include <uchar.h>
# elif !defined(__cplusplus)
typedef uint_least16_t char16_t;
typedef uint_least32_t char32_t;
# endif
typedef float swift_float2  __attribute__((__ext_vector_type__(2)));
typedef float swift_float3  __attribute__((__ext_vector_type__(3)));
typedef float swift_float4  __attribute__((__ext_vector_type__(4)));
typedef double swift_double2  __attribute__((__ext_vector_type__(2)));
typedef double swift_double3  __attribute__((__ext_vector_type__(3)));
typedef double swift_double4  __attribute__((__ext_vector_type__(4)));
typedef int swift_int2  __attribute__((__ext_vector_type__(2)));
typedef int swift_int3  __attribute__((__ext_vector_type__(3)));
typedef int swift_int4  __attribute__((__ext_vector_type__(4)));
typedef unsigned int swift_uint2  __attribute__((__ext_vector_type__(2)));
typedef unsigned int swift_uint3  __attribute__((__ext_vector_type__(3)));
typedef unsigned int swift_uint4  __attribute__((__ext_vector_type__(4)));
#endif

#if !defined(SWIFT_PASTE)
# define SWIFT_PASTE_HELPER(x, y) x##y
# define SWIFT_PASTE(x, y) SWIFT_PASTE_HELPER(x, y)
#endif
#if !defined(SWIFT_METATYPE)
# define SWIFT_METATYPE(X) Class
#endif
#if !defined(SWIFT_CLASS_PROPERTY)
# if __has_feature(objc_class_property)
#  define SWIFT_CLASS_PROPERTY(...) __VA_ARGS__
# else
#  define SWIFT_CLASS_PROPERTY(...)
# endif
#endif

#if __has_attribute(objc_runtime_name)
# define SWIFT_RUNTIME_NAME(X) __attribute__((objc_runtime_name(X)))
#else
# define SWIFT_RUNTIME_NAME(X)
#endif
#if __has_attribute(swift_name)
# define SWIFT_COMPILE_NAME(X) __attribute__((swift_name(X)))
#else
# define SWIFT_COMPILE_NAME(X)
#endif
#if __has_attribute(objc_method_family)
# define SWIFT_METHOD_FAMILY(X) __attribute__((objc_method_family(X)))
#else
# define SWIFT_METHOD_FAMILY(X)
#endif
#if __has_attribute(noescape)
# define SWIFT_NOESCAPE __attribute__((noescape))
#else
# define SWIFT_NOESCAPE
#endif
#if __has_attribute(warn_unused_result)
# define SWIFT_WARN_UNUSED_RESULT __attribute__((warn_unused_result))
#else
# define SWIFT_WARN_UNUSED_RESULT
#endif
#if __has_attribute(noreturn)
# define SWIFT_NORETURN __attribute__((noreturn))
#else
# define SWIFT_NORETURN
#endif
#if !defined(SWIFT_CLASS_EXTRA)
# define SWIFT_CLASS_EXTRA
#endif
#if !defined(SWIFT_PROTOCOL_EXTRA)
# define SWIFT_PROTOCOL_EXTRA
#endif
#if !defined(SWIFT_ENUM_EXTRA)
# define SWIFT_ENUM_EXTRA
#endif
#if !defined(SWIFT_CLASS)
# if __has_attribute(objc_subclassing_restricted)
#  define SWIFT_CLASS(SWIFT_NAME) SWIFT_RUNTIME_NAME(SWIFT_NAME) __attribute__((objc_subclassing_restricted)) SWIFT_CLASS_EXTRA
#  define SWIFT_CLASS_NAMED(SWIFT_NAME) __attribute__((objc_subclassing_restricted)) SWIFT_COMPILE_NAME(SWIFT_NAME) SWIFT_CLASS_EXTRA
# else
#  define SWIFT_CLASS(SWIFT_NAME) SWIFT_RUNTIME_NAME(SWIFT_NAME) SWIFT_CLASS_EXTRA
#  define SWIFT_CLASS_NAMED(SWIFT_NAME) SWIFT_COMPILE_NAME(SWIFT_NAME) SWIFT_CLASS_EXTRA
# endif
#endif
#if !defined(SWIFT_RESILIENT_CLASS)
# if __has_attribute(objc_class_stub)
#  define SWIFT_RESILIENT_CLASS(SWIFT_NAME) SWIFT_CLASS(SWIFT_NAME) __attribute__((objc_class_stub))
#  define SWIFT_RESILIENT_CLASS_NAMED(SWIFT_NAME) __attribute__((objc_class_stub)) SWIFT_CLASS_NAMED(SWIFT_NAME)
# else
#  define SWIFT_RESILIENT_CLASS(SWIFT_NAME) SWIFT_CLASS(SWIFT_NAME)
#  define SWIFT_RESILIENT_CLASS_NAMED(SWIFT_NAME) SWIFT_CLASS_NAMED(SWIFT_NAME)
# endif
#endif

#if !defined(SWIFT_PROTOCOL)
# define SWIFT_PROTOCOL(SWIFT_NAME) SWIFT_RUNTIME_NAME(SWIFT_NAME) SWIFT_PROTOCOL_EXTRA
# define SWIFT_PROTOCOL_NAMED(SWIFT_NAME) SWIFT_COMPILE_NAME(SWIFT_NAME) SWIFT_PROTOCOL_EXTRA
#endif

#if !defined(SWIFT_EXTENSION)
# define SWIFT_EXTENSION(M) SWIFT_PASTE(M##_Swift_, __LINE__)
#endif

#if !defined(OBJC_DESIGNATED_INITIALIZER)
# if __has_attribute(objc_designated_initializer)
#  define OBJC_DESIGNATED_INITIALIZER __attribute__((objc_designated_initializer))
# else
#  define OBJC_DESIGNATED_INITIALIZER
# endif
#endif
#if !defined(SWIFT_ENUM_ATTR)
# if defined(__has_attribute) && __has_attribute(enum_extensibility)
#  define SWIFT_ENUM_ATTR(_extensibility) __attribute__((enum_extensibility(_extensibility)))
# else
#  define SWIFT_ENUM_ATTR(_extensibility)
# endif
#endif
#if !defined(SWIFT_ENUM)
# define SWIFT_ENUM(_type, _name, _extensibility) enum _name : _type _name; enum SWIFT_ENUM_ATTR(_extensibility) SWIFT_ENUM_EXTRA _name : _type
# if __has_feature(generalized_swift_name)
#  define SWIFT_ENUM_NAMED(_type, _name, SWIFT_NAME, _extensibility) enum _name : _type _name SWIFT_COMPILE_NAME(SWIFT_NAME); enum SWIFT_COMPILE_NAME(SWIFT_NAME) SWIFT_ENUM_ATTR(_extensibility) SWIFT_ENUM_EXTRA _name : _type
# else
#  define SWIFT_ENUM_NAMED(_type, _name, SWIFT_NAME, _extensibility) SWIFT_ENUM(_type, _name, _extensibility)
# endif
#endif
#if !defined(SWIFT_UNAVAILABLE)
# define SWIFT_UNAVAILABLE __attribute__((unavailable))
#endif
#if !defined(SWIFT_UNAVAILABLE_MSG)
# define SWIFT_UNAVAILABLE_MSG(msg) __attribute__((unavailable(msg)))
#endif
#if !defined(SWIFT_AVAILABILITY)
# define SWIFT_AVAILABILITY(plat, ...) __attribute__((availability(plat, __VA_ARGS__)))
#endif
#if !defined(SWIFT_WEAK_IMPORT)
# define SWIFT_WEAK_IMPORT __attribute__((weak_import))
#endif
#if !defined(SWIFT_DEPRECATED)
# define SWIFT_DEPRECATED __attribute__((deprecated))
#endif
#if !defined(SWIFT_DEPRECATED_MSG)
# define SWIFT_DEPRECATED_MSG(...) __attribute__((deprecated(__VA_ARGS__)))
#endif
#if __has_feature(attribute_diagnose_if_objc)
# define SWIFT_DEPRECATED_OBJC(Msg) __attribute__((diagnose_if(1, Msg, "warning")))
#else
# define SWIFT_DEPRECATED_OBJC(Msg) SWIFT_DEPRECATED_MSG(Msg)
#endif
#if !defined(IBSegueAction)
# define IBSegueAction
#endif
#if __has_feature(modules)
#if __has_warning("-Watimport-in-framework-header")
#pragma clang diagnostic ignored "-Watimport-in-framework-header"
#endif
@import AVFoundation;
@import CommonUISDK;
@import Foundation;
@import ObjectiveC;
@import UIKit;
@import ZendeskProviderSDK;
#endif

#import <ZendeskSDK/ZendeskSDK.h>

#pragma clang diagnostic ignored "-Wproperty-attribute-mismatch"
#pragma clang diagnostic ignored "-Wduplicate-method-arg"
#if __has_warning("-Wpragma-clang-attribute")
# pragma clang diagnostic ignored "-Wpragma-clang-attribute"
#endif
#pragma clang diagnostic ignored "-Wunknown-pragmas"
#pragma clang diagnostic ignored "-Wnullability"

#if __has_attribute(external_source_symbol)
# pragma push_macro("any")
# undef any
# pragma clang attribute push(__attribute__((external_source_symbol(language="Swift", defined_in="ZendeskSDK",generated_declaration))), apply_to=any(function,enum,objc_interface,objc_category,objc_protocol))
# pragma pop_macro("any")
#endif








/// Data class used to configure Article Screen
/// version:
/// 2.3.0
SWIFT_CLASS_NAMED("ArticleUiConfiguration")
@interface ZDKArticleUiConfiguration : NSObject <ZDKUiConfiguration>
- (nonnull instancetype)init OBJC_DESIGNATED_INITIALIZER;
/// Show the <code>Contact Support</code> button in the help center’s article view
/// version:
/// 2.3.0
@property (nonatomic) BOOL showContactOptions;
/// Hide the <code>Contact Support</code> button in the help center’s article views
/// version:
/// 2.3.0
@property (nonatomic) BOOL hideContactSupport SWIFT_DEPRECATED_MSG("use showContactOptions instead");
/// The <code>Contact Support</code> button on the Help Center Article screen will route to the “Answer Bot” screen,
/// if set to <code>true</code> and the <code>AnswerBot</code> SDK is present. Otherwise, we will route to <code>RequestUI</code> screen.
/// <code>true</code> by default
/// version:
/// 2.4.0
@property (nonatomic) BOOL deflectionEnabled;
@end

@protocol ZDKContainerChildControllerDelegate;

SWIFT_PROTOCOL_NAMED("ContainerChild")
@protocol ZDKContainerChild <NSObject>
@property (nonatomic, strong) id <ZDKContainerChildControllerDelegate> _Nullable childDelegate;
@end

@class UINavigationItem;

SWIFT_PROTOCOL_NAMED("ContainerChildControllerDelegate")
@protocol ZDKContainerChildControllerDelegate <NSObject>
- (void)willDismiss;
@property (nonatomic, readonly, strong) UINavigationItem * _Nullable navItem;
@end

@class NSBundle;
@class NSCoder;

SWIFT_CLASS("_TtC10ZendeskSDK23ContainerViewController")
@interface ContainerViewController : UIViewController
- (void)viewDidLoad;
- (nonnull instancetype)initWithNibName:(NSString * _Nullable)nibNameOrNil bundle:(NSBundle * _Nullable)nibBundleOrNil OBJC_DESIGNATED_INITIALIZER;
- (nullable instancetype)initWithCoder:(NSCoder * _Nonnull)coder OBJC_DESIGNATED_INITIALIZER;
@end


@interface ContainerViewController (SWIFT_EXTENSION(ZendeskSDK)) <ZDKContainerChildControllerDelegate>
@property (nonatomic, readonly, strong) UINavigationItem * _Nullable navItem;
- (void)willDismiss;
@end

@protocol ZDKCoordinator;

SWIFT_CLASS_NAMED("CoordinatingViewController")
@interface ZDKCoordinatingViewController : ContainerViewController
- (nonnull instancetype)initWithCoordinator:(id <ZDKCoordinator> _Nonnull)coordinator OBJC_DESIGNATED_INITIALIZER;
- (nullable instancetype)initWithCoder:(NSCoder * _Nonnull)aDecoder SWIFT_UNAVAILABLE;
- (void)viewDidLoad;
- (void)viewWillAppear:(BOOL)animated;
- (void)viewDidAppear:(BOOL)animated;
- (void)viewDidDisappear:(BOOL)animated;
- (nonnull instancetype)initWithNibName:(NSString * _Nullable)nibNameOrNil bundle:(NSBundle * _Nullable)nibBundleOrNil SWIFT_UNAVAILABLE;
@end


SWIFT_PROTOCOL_NAMED("Coordinator")
@protocol ZDKCoordinator
- (void)startWithPresent:(void (^ _Nonnull)(UIViewController <ZDKContainerChild> * _Nonnull))present with:(id <ZDKContainerChildControllerDelegate> _Nonnull)containerDelegate;
@end

@class UINavigationController;
@class UIBarButtonItem;

SWIFT_CLASS_NAMED("DismissUtil")
@interface ZDKDismissUtil : NSObject
/// Decide based on the contents of the nav stack whether to pop
/// the given view controller off the stack, or whether to
/// dismiss the given view controller.
/// \param viewController a view controller which should be removed from a screen.
///
/// \param navigationController a navigation controller for inspection.
///
+ (void)remove:(UIViewController * _Nullable)viewController from:(UINavigationController * _Nullable)navigationController;
+ (BOOL)navigationController:(UINavigationController * _Nullable)navigationController didPush:(UIViewController * _Nullable)viewController SWIFT_WARN_UNUSED_RESULT;
+ (UIBarButtonItem * _Nonnull)barButtonFor:(UIViewController * _Nonnull)viewController embededIn:(UINavigationController * _Nullable)navigationController action:(SEL _Nonnull)action SWIFT_WARN_UNUSED_RESULT;
- (nonnull instancetype)init OBJC_DESIGNATED_INITIALIZER;
@end

/// Enum that represents the file types that zendesk supports
typedef SWIFT_ENUM_NAMED(NSInteger, ZDKFileType, "FileType", open) {
  ZDKFileTypePng = 0,
  ZDKFileTypeJpg = 1,
  ZDKFileTypePdf = 2,
  ZDKFileTypePlain = 3,
  ZDKFileTypeWord = 4,
  ZDKFileTypeExcel = 5,
  ZDKFileTypePowerpoint = 6,
  ZDKFileTypePowerpointX = 7,
  ZDKFileTypeKeynote = 8,
  ZDKFileTypePages = 9,
  ZDKFileTypeNumbers = 10,
  ZDKFileTypeBinary = 11,
  ZDKFileTypeHeic = 12,
};

@protocol ZDKHelpCenterArticleRatingStateProtocol;

SWIFT_CLASS("_TtC10ZendeskSDK30HelpCenterArticleVotingHandler")
@interface HelpCenterArticleVotingHandler : NSObject <ZDKHelpCenterArticleRatingHandlerProtocol>
- (nonnull instancetype)initWithArticleId:(NSString * _Nonnull)articleId andLocale:(NSString * _Nonnull)locale;
- (void)articleRatingVoteSelected:(id <ZDKHelpCenterArticleRatingStateProtocol> _Nonnull)ratingState atIndex:(NSInteger)index;
- (NSInteger)currentArticleVote SWIFT_WARN_UNUSED_RESULT;
- (nonnull instancetype)init SWIFT_UNAVAILABLE;
+ (nonnull instancetype)new SWIFT_UNAVAILABLE_MSG("-init is unavailable");
@end

@class ZDKZendesk;

SWIFT_CLASS_NAMED("HelpCenterContactUsRouter")
@interface ZDKHelpCenterContactUsRouter : NSObject
- (nonnull instancetype)initWithPresentingViewController:(UIViewController * _Nonnull)presentingViewController uiConfigs:(NSArray<id <ZDKUiConfiguration>> * _Nonnull)uiConfigs zendesk:(ZDKZendesk * _Nonnull)zendesk isDeflectionEnabled:(BOOL)isDeflectionEnabled OBJC_DESIGNATED_INITIALIZER;
- (void)decideButtonActionForNavBar;
- (void)decideButtonActionForEmptySearch;
- (nonnull instancetype)init SWIFT_UNAVAILABLE;
+ (nonnull instancetype)new SWIFT_UNAVAILABLE_MSG("-init is unavailable");
@end


SWIFT_CLASS_NAMED("HelpCenterCoordinator")
@interface ZDKHelpCenterCoordinator : NSObject <ZDKCoordinator>
- (nonnull instancetype)initWithHelpCenterController:(UIViewController <ZDKContainerChild> * _Nonnull)helpCenterController uiConfigurations:(NSArray<id <ZDKUiConfiguration>> * _Nonnull)uiConfigurations OBJC_DESIGNATED_INITIALIZER;
- (void)startWithPresent:(void (^ _Nonnull)(UIViewController <ZDKContainerChild> * _Nonnull))present with:(id <ZDKContainerChildControllerDelegate> _Nonnull)containerDelegate;
- (nonnull instancetype)init SWIFT_UNAVAILABLE;
+ (nonnull instancetype)new SWIFT_UNAVAILABLE_MSG("-init is unavailable");
@end

@class NSNumber;
@class ZDKHelpCenterOverviewContentModel;

/// Data class used to configure Help Center
/// version:
/// 2.0.0
SWIFT_CLASS_NAMED("HelpCenterUiConfiguration")
@interface ZDKHelpCenterUiConfiguration : NSObject <ZDKUiConfiguration>
/// A list of labels to which must be present for an article to show up in the list.
/// The labels combined with AND
/// version:
/// 2.0.0
@property (nonatomic, copy) NSArray<NSString *> * _Nonnull labels;
/// The type of ids being used.
/// version:
/// 2.0.0
@property (nonatomic) ZDKHelpCenterOverviewGroupType groupType;
/// Hide the <code>Contact Support</code> button in the Help Center empty search result screen
/// false by default
/// version:
/// 2.0.0
@property (nonatomic) BOOL hideContactSupport SWIFT_DEPRECATED_MSG("use showContactOptionsOnEmptySearch instead");
/// Show the <code>Contact Support</code> button in the Help Center main screen
/// true by default
/// version:
/// 2.4.0
@property (nonatomic) BOOL showContactOptions;
/// Show the <code>Contact Support</code> button in the Help Center empty search result screen
/// true by default
/// version:
/// 2.4.0
@property (nonatomic) BOOL showContactOptionsOnEmptySearch;
/// The <code>Contact Support</code> button on the Help Center Main screen and the ‘Contact Support’
/// on the Empty Search screen will route to the “Answer Bot” screen, if set to
/// <code>true</code> and the <code>AnswerBot</code> SDK is present. Otherwise, we will route to <code>RequestUI</code> screen.
/// <code>true</code> by default.
/// version:
/// 2.4.0
@property (nonatomic) BOOL deflectionEnabled;
/// A list of ids. Only show articles contained in the categories/sections.
/// version:
/// 2.0.0
@property (nonatomic, copy) NSArray<NSNumber *> * _Nonnull groupIds;
@property (nonatomic, readonly, strong) ZDKHelpCenterOverviewContentModel * _Nonnull overviewContentModel;
/// Returns a default model. To customize the content, update properties on a default model.
/// @return A default content model.
/// version:
/// 2.0.0
- (nonnull instancetype)init OBJC_DESIGNATED_INITIALIZER;
@end






/// Creates an attachment to be uploaded when a request is created
/// version:
/// 2.0.0
SWIFT_CLASS_NAMED("RequestAttachment")
@interface ZDKRequestAttachment : NSObject
/// Name of the file to be uploaded
/// version:
/// 2.0.0
@property (nonatomic, readonly, copy) NSString * _Nonnull filename;
/// Data of the file contents to be uploaded
/// version:
/// 2.0.0
@property (nonatomic, readonly, copy) NSData * _Nonnull data;
/// Type of the file to be uploaded
/// version:
/// 2.0.0
@property (nonatomic, readonly) enum ZDKFileType fileType;
/// Generates a new state from the old state and an action
/// version:
/// 2.0.0
/// \param filename the name of the file to be uploaded, without the file extension
///
/// \param data the data of the contents of the file to be uploaded
///
/// \param fileType the type of the file to be uploaded
///
///
/// returns:
/// an instance of RequestAttachment
- (nonnull instancetype)initWithFilename:(NSString * _Nonnull)filename data:(NSData * _Nonnull)data fileType:(enum ZDKFileType)fileType OBJC_DESIGNATED_INITIALIZER;
- (nonnull instancetype)init SWIFT_UNAVAILABLE;
+ (nonnull instancetype)new SWIFT_UNAVAILABLE_MSG("-init is unavailable");
@end


SWIFT_CLASS("_TtC10ZendeskSDK18RequestCoordinator")
@interface RequestCoordinator : NSObject <ZDKCoordinator>
- (void)startWithPresent:(void (^ _Nonnull)(UIViewController <ZDKContainerChild> * _Nonnull))present with:(id <ZDKContainerChildControllerDelegate> _Nonnull)containerDelegate;
- (nonnull instancetype)init SWIFT_UNAVAILABLE;
+ (nonnull instancetype)new SWIFT_UNAVAILABLE_MSG("-init is unavailable");
@end


/// Used to build view controller for ticketing. The returned objects must be presented inside a UINavigationController.
/// The containing navigation controller can be presented any way you see fit.
/// version:
/// 2.0.0
SWIFT_CLASS_NAMED("RequestUi")
@interface ZDKRequestUi : NSObject
/// Build the Request List. This is a list of a users tickets.
/// Conversations must be enabled in your Zendesk SDK admin settings. Conversations are not available on Essential.
/// version:
/// 2.0.0
+ (UIViewController * _Nonnull)buildRequestList SWIFT_WARN_UNUSED_RESULT;
/// Build the Request List with a list of UiConfigurations.
/// Conversations must be enabled in your Zendesk SDK admin settings. Conversations are not available on Essential.
/// version:
/// 2.0.0
/// \param configurations A list of UiConfiguration objects. You do not need to configure the controller being presented.
///
+ (UIViewController * _Nonnull)buildRequestListWith:(NSArray<id <ZDKUiConfiguration>> * _Nonnull)configurations SWIFT_WARN_UNUSED_RESULT;
/// Build the Request Ui. This allows users to create and respond to individual tickets.
/// version:
/// 2.0.0
+ (UIViewController * _Nonnull)buildRequestUi SWIFT_WARN_UNUSED_RESULT;
/// Build the Request Ui with a list of UiConfigurations.
/// version:
/// 2.0.0
/// \param configurations A list of UiConfiguration objects. You do not need to configure the controller being presented.
///
+ (UIViewController * _Nonnull)buildRequestUiWith:(NSArray<id <ZDKUiConfiguration>> * _Nonnull)configurations SWIFT_WARN_UNUSED_RESULT;
/// Build the Request Ui. This allows users to create and respond to individual tickets.
/// version:
/// 2.0.0
/// \param requestId The ID of the ticket to display.
///
+ (UIViewController * _Nonnull)buildRequestUiWithRequestId:(NSString * _Nonnull)requestId SWIFT_WARN_UNUSED_RESULT;
/// Build the Request Ui with a list of UiConfigurations.
/// version:
/// 2.0.0
/// \param requestId The ID of the ticket to display.
///
/// \param configurations A list of UiConfiguration objects. You do not need to configure the controller being presented.
///
+ (UIViewController * _Nonnull)buildRequestUiWithRequestId:(NSString * _Nonnull)requestId configurations:(NSArray<id <ZDKUiConfiguration>> * _Nonnull)configurations SWIFT_WARN_UNUSED_RESULT;
- (nonnull instancetype)init OBJC_DESIGNATED_INITIALIZER;
@end

@class ZDKCustomField;

/// Data class used to configure Ticketing
/// version:
/// 2.0.0
SWIFT_CLASS_NAMED("RequestUiConfiguration")
@interface ZDKRequestUiConfiguration : NSObject <ZDKUiConfiguration>
/// The Subject of any tickets created
/// version:
/// 2.0.0
@property (nonatomic, copy) NSString * _Nonnull subject;
/// Tags set in any created tickets
/// version:
/// 2.0.0
@property (nonatomic, copy) NSArray<NSString *> * _Nonnull tags;
/// Custom Fields set in any created tickets
/// version:
/// 4.0.0
@property (nonatomic, copy) NSArray<ZDKCustomField *> * _Nonnull customFields;
/// The ticket form of any created tickets.
/// If this property is set <code>fields</code> must also be set. Any ticket fields set will be associated with <code>tickerFormID</code>.
/// version:
/// 2.0.0
@property (nonatomic, strong) NSNumber * _Nullable ticketFormID;
/// A list of RequestAttachments sent with any created tickets.
/// Note: These files are treated as any other. They will be displayed in the UI
/// and the user will be able to remove them.
/// version:
/// 2.0.0
@property (nonatomic, copy) NSArray<ZDKRequestAttachment *> * _Nonnull fileAttachments;
/// Returns a default model. To customisze the content, update properties on a default model.
/// version:
/// 2.0.0
- (nonnull instancetype)init OBJC_DESIGNATED_INITIALIZER;
@end


/// Used to enable <a href="https://github.com/zendesk/Suas-iOS">Suas</a> logging.
/// Suas drives most of the Ticketing UI so the Suas logs can be useful for debugging it.
/// Enabling the Suas logger produces a lot of information and will slow down the SDK.
/// version:
/// 2.0.0
SWIFT_CLASS_NAMED("SuasDebugLogger")
@interface ZDKSuasDebugLogger : NSObject
/// Toggle the Suas debug logging
/// version:
/// 2.0.0
SWIFT_CLASS_PROPERTY(@property (nonatomic, class) BOOL enabled;)
+ (BOOL)enabled SWIFT_WARN_UNUSED_RESULT;
+ (void)setEnabled:(BOOL)newValue;
- (nonnull instancetype)init OBJC_DESIGNATED_INITIALIZER;
@end


SWIFT_CLASS_NAMED("SupportUI")
@interface ZDKSupportUI : NSObject
/// Locale override for help center
@property (nonatomic, copy) NSString * _Nullable helpCenterLocaleOverride;
/// Initialize the SupportUI singleton with the Zendesk singleton
/// from ZendeskCoreSDK
+ (void)initializeWithZendesk:(ZDKZendesk * _Nullable)zendesk;
/// Get the API instance (singleton).
SWIFT_CLASS_PROPERTY(@property (nonatomic, class, readonly, strong) ZDKSupportUI * _Nullable instance;)
+ (ZDKSupportUI * _Nullable)instance SWIFT_WARN_UNUSED_RESULT;
/// This method can be used to aid in handling push notifications relating to requests.
/// This method can result in a dynamic update in the request UI. For this occur,
/// the push notification and the on screen request must contain matching request ids.
/// This method will return true only in the case of a successful UI update.
/// A return value of false means that the push notification was unhandled.
/// At this point you can decided how best to update the user based on the contents of the notification.
/// \param requestId The ID of the request to refresh
///
///
/// returns:
/// A boolean indicating whether the Request Detail Screen has been refresh or not.
- (BOOL)refreshRequestWithRequestId:(NSString * _Nonnull)requestId SWIFT_WARN_UNUSED_RESULT;
- (nonnull instancetype)init SWIFT_UNAVAILABLE;
+ (nonnull instancetype)new SWIFT_UNAVAILABLE_MSG("-init is unavailable");
@end

@class UIColor;

/// Used to style the SDK.
/// Set the currentTheme.primaryColor to style the UI.
/// version:
/// 2.0.0
SWIFT_CLASS_NAMED("Theme")
@interface ZDKTheme : NSObject
/// The theme currently applied to the SDK.
/// version:
/// 2.0.0
SWIFT_CLASS_PROPERTY(@property (nonatomic, class, readonly, strong) ZDKTheme * _Nonnull currentTheme;)
+ (ZDKTheme * _Nonnull)currentTheme SWIFT_WARN_UNUSED_RESULT;
/// The primary color of the SDK.
/// This is applied as a tint to various UI components
/// version:
/// 2.0.0
@property (nonatomic, strong) UIColor * _Nonnull primaryColor;
- (nonnull instancetype)init OBJC_DESIGNATED_INITIALIZER;
@end






























SWIFT_CLASS("_TtC10ZendeskSDK12ZDKConstants")
@interface ZDKConstants : NSObject
+ (UIColor * _Nonnull)colorForToast SWIFT_WARN_UNUSED_RESULT;
- (nonnull instancetype)init OBJC_DESIGNATED_INITIALIZER;
@end





#if __has_attribute(external_source_symbol)
# pragma clang attribute pop
#endif
#pragma clang diagnostic pop

#endif
#else

#if 0
#elif defined(__arm64__) && __arm64__
// Generated by Apple Swift version 5.1 (swiftlang-1100.0.270.13 clang-1100.0.33.7)
#pragma clang diagnostic push
#pragma clang diagnostic ignored "-Wgcc-compat"

#if !defined(__has_include)
# define __has_include(x) 0
#endif
#if !defined(__has_attribute)
# define __has_attribute(x) 0
#endif
#if !defined(__has_feature)
# define __has_feature(x) 0
#endif
#if !defined(__has_warning)
# define __has_warning(x) 0
#endif

#if __has_include(<swift/objc-prologue.h>)
# include <swift/objc-prologue.h>
#endif

#pragma clang diagnostic ignored "-Wauto-import"
#include <Foundation/Foundation.h>
#include <stdint.h>
#include <stddef.h>
#include <stdbool.h>

#if !defined(SWIFT_TYPEDEFS)
# define SWIFT_TYPEDEFS 1
# if __has_include(<uchar.h>)
#  include <uchar.h>
# elif !defined(__cplusplus)
typedef uint_least16_t char16_t;
typedef uint_least32_t char32_t;
# endif
typedef float swift_float2  __attribute__((__ext_vector_type__(2)));
typedef float swift_float3  __attribute__((__ext_vector_type__(3)));
typedef float swift_float4  __attribute__((__ext_vector_type__(4)));
typedef double swift_double2  __attribute__((__ext_vector_type__(2)));
typedef double swift_double3  __attribute__((__ext_vector_type__(3)));
typedef double swift_double4  __attribute__((__ext_vector_type__(4)));
typedef int swift_int2  __attribute__((__ext_vector_type__(2)));
typedef int swift_int3  __attribute__((__ext_vector_type__(3)));
typedef int swift_int4  __attribute__((__ext_vector_type__(4)));
typedef unsigned int swift_uint2  __attribute__((__ext_vector_type__(2)));
typedef unsigned int swift_uint3  __attribute__((__ext_vector_type__(3)));
typedef unsigned int swift_uint4  __attribute__((__ext_vector_type__(4)));
#endif

#if !defined(SWIFT_PASTE)
# define SWIFT_PASTE_HELPER(x, y) x##y
# define SWIFT_PASTE(x, y) SWIFT_PASTE_HELPER(x, y)
#endif
#if !defined(SWIFT_METATYPE)
# define SWIFT_METATYPE(X) Class
#endif
#if !defined(SWIFT_CLASS_PROPERTY)
# if __has_feature(objc_class_property)
#  define SWIFT_CLASS_PROPERTY(...) __VA_ARGS__
# else
#  define SWIFT_CLASS_PROPERTY(...)
# endif
#endif

#if __has_attribute(objc_runtime_name)
# define SWIFT_RUNTIME_NAME(X) __attribute__((objc_runtime_name(X)))
#else
# define SWIFT_RUNTIME_NAME(X)
#endif
#if __has_attribute(swift_name)
# define SWIFT_COMPILE_NAME(X) __attribute__((swift_name(X)))
#else
# define SWIFT_COMPILE_NAME(X)
#endif
#if __has_attribute(objc_method_family)
# define SWIFT_METHOD_FAMILY(X) __attribute__((objc_method_family(X)))
#else
# define SWIFT_METHOD_FAMILY(X)
#endif
#if __has_attribute(noescape)
# define SWIFT_NOESCAPE __attribute__((noescape))
#else
# define SWIFT_NOESCAPE
#endif
#if __has_attribute(warn_unused_result)
# define SWIFT_WARN_UNUSED_RESULT __attribute__((warn_unused_result))
#else
# define SWIFT_WARN_UNUSED_RESULT
#endif
#if __has_attribute(noreturn)
# define SWIFT_NORETURN __attribute__((noreturn))
#else
# define SWIFT_NORETURN
#endif
#if !defined(SWIFT_CLASS_EXTRA)
# define SWIFT_CLASS_EXTRA
#endif
#if !defined(SWIFT_PROTOCOL_EXTRA)
# define SWIFT_PROTOCOL_EXTRA
#endif
#if !defined(SWIFT_ENUM_EXTRA)
# define SWIFT_ENUM_EXTRA
#endif
#if !defined(SWIFT_CLASS)
# if __has_attribute(objc_subclassing_restricted)
#  define SWIFT_CLASS(SWIFT_NAME) SWIFT_RUNTIME_NAME(SWIFT_NAME) __attribute__((objc_subclassing_restricted)) SWIFT_CLASS_EXTRA
#  define SWIFT_CLASS_NAMED(SWIFT_NAME) __attribute__((objc_subclassing_restricted)) SWIFT_COMPILE_NAME(SWIFT_NAME) SWIFT_CLASS_EXTRA
# else
#  define SWIFT_CLASS(SWIFT_NAME) SWIFT_RUNTIME_NAME(SWIFT_NAME) SWIFT_CLASS_EXTRA
#  define SWIFT_CLASS_NAMED(SWIFT_NAME) SWIFT_COMPILE_NAME(SWIFT_NAME) SWIFT_CLASS_EXTRA
# endif
#endif
#if !defined(SWIFT_RESILIENT_CLASS)
# if __has_attribute(objc_class_stub)
#  define SWIFT_RESILIENT_CLASS(SWIFT_NAME) SWIFT_CLASS(SWIFT_NAME) __attribute__((objc_class_stub))
#  define SWIFT_RESILIENT_CLASS_NAMED(SWIFT_NAME) __attribute__((objc_class_stub)) SWIFT_CLASS_NAMED(SWIFT_NAME)
# else
#  define SWIFT_RESILIENT_CLASS(SWIFT_NAME) SWIFT_CLASS(SWIFT_NAME)
#  define SWIFT_RESILIENT_CLASS_NAMED(SWIFT_NAME) SWIFT_CLASS_NAMED(SWIFT_NAME)
# endif
#endif

#if !defined(SWIFT_PROTOCOL)
# define SWIFT_PROTOCOL(SWIFT_NAME) SWIFT_RUNTIME_NAME(SWIFT_NAME) SWIFT_PROTOCOL_EXTRA
# define SWIFT_PROTOCOL_NAMED(SWIFT_NAME) SWIFT_COMPILE_NAME(SWIFT_NAME) SWIFT_PROTOCOL_EXTRA
#endif

#if !defined(SWIFT_EXTENSION)
# define SWIFT_EXTENSION(M) SWIFT_PASTE(M##_Swift_, __LINE__)
#endif

#if !defined(OBJC_DESIGNATED_INITIALIZER)
# if __has_attribute(objc_designated_initializer)
#  define OBJC_DESIGNATED_INITIALIZER __attribute__((objc_designated_initializer))
# else
#  define OBJC_DESIGNATED_INITIALIZER
# endif
#endif
#if !defined(SWIFT_ENUM_ATTR)
# if defined(__has_attribute) && __has_attribute(enum_extensibility)
#  define SWIFT_ENUM_ATTR(_extensibility) __attribute__((enum_extensibility(_extensibility)))
# else
#  define SWIFT_ENUM_ATTR(_extensibility)
# endif
#endif
#if !defined(SWIFT_ENUM)
# define SWIFT_ENUM(_type, _name, _extensibility) enum _name : _type _name; enum SWIFT_ENUM_ATTR(_extensibility) SWIFT_ENUM_EXTRA _name : _type
# if __has_feature(generalized_swift_name)
#  define SWIFT_ENUM_NAMED(_type, _name, SWIFT_NAME, _extensibility) enum _name : _type _name SWIFT_COMPILE_NAME(SWIFT_NAME); enum SWIFT_COMPILE_NAME(SWIFT_NAME) SWIFT_ENUM_ATTR(_extensibility) SWIFT_ENUM_EXTRA _name : _type
# else
#  define SWIFT_ENUM_NAMED(_type, _name, SWIFT_NAME, _extensibility) SWIFT_ENUM(_type, _name, _extensibility)
# endif
#endif
#if !defined(SWIFT_UNAVAILABLE)
# define SWIFT_UNAVAILABLE __attribute__((unavailable))
#endif
#if !defined(SWIFT_UNAVAILABLE_MSG)
# define SWIFT_UNAVAILABLE_MSG(msg) __attribute__((unavailable(msg)))
#endif
#if !defined(SWIFT_AVAILABILITY)
# define SWIFT_AVAILABILITY(plat, ...) __attribute__((availability(plat, __VA_ARGS__)))
#endif
#if !defined(SWIFT_WEAK_IMPORT)
# define SWIFT_WEAK_IMPORT __attribute__((weak_import))
#endif
#if !defined(SWIFT_DEPRECATED)
# define SWIFT_DEPRECATED __attribute__((deprecated))
#endif
#if !defined(SWIFT_DEPRECATED_MSG)
# define SWIFT_DEPRECATED_MSG(...) __attribute__((deprecated(__VA_ARGS__)))
#endif
#if __has_feature(attribute_diagnose_if_objc)
# define SWIFT_DEPRECATED_OBJC(Msg) __attribute__((diagnose_if(1, Msg, "warning")))
#else
# define SWIFT_DEPRECATED_OBJC(Msg) SWIFT_DEPRECATED_MSG(Msg)
#endif
#if !defined(IBSegueAction)
# define IBSegueAction
#endif
#if __has_feature(modules)
#if __has_warning("-Watimport-in-framework-header")
#pragma clang diagnostic ignored "-Watimport-in-framework-header"
#endif
@import AVFoundation;
@import CommonUISDK;
@import Foundation;
@import ObjectiveC;
@import UIKit;
@import ZendeskProviderSDK;
#endif

#import <ZendeskSDK/ZendeskSDK.h>

#pragma clang diagnostic ignored "-Wproperty-attribute-mismatch"
#pragma clang diagnostic ignored "-Wduplicate-method-arg"
#if __has_warning("-Wpragma-clang-attribute")
# pragma clang diagnostic ignored "-Wpragma-clang-attribute"
#endif
#pragma clang diagnostic ignored "-Wunknown-pragmas"
#pragma clang diagnostic ignored "-Wnullability"

#if __has_attribute(external_source_symbol)
# pragma push_macro("any")
# undef any
# pragma clang attribute push(__attribute__((external_source_symbol(language="Swift", defined_in="ZendeskSDK",generated_declaration))), apply_to=any(function,enum,objc_interface,objc_category,objc_protocol))
# pragma pop_macro("any")
#endif








/// Data class used to configure Article Screen
/// version:
/// 2.3.0
SWIFT_CLASS_NAMED("ArticleUiConfiguration")
@interface ZDKArticleUiConfiguration : NSObject <ZDKUiConfiguration>
- (nonnull instancetype)init OBJC_DESIGNATED_INITIALIZER;
/// Show the <code>Contact Support</code> button in the help center’s article view
/// version:
/// 2.3.0
@property (nonatomic) BOOL showContactOptions;
/// Hide the <code>Contact Support</code> button in the help center’s article views
/// version:
/// 2.3.0
@property (nonatomic) BOOL hideContactSupport SWIFT_DEPRECATED_MSG("use showContactOptions instead");
/// The <code>Contact Support</code> button on the Help Center Article screen will route to the “Answer Bot” screen,
/// if set to <code>true</code> and the <code>AnswerBot</code> SDK is present. Otherwise, we will route to <code>RequestUI</code> screen.
/// <code>true</code> by default
/// version:
/// 2.4.0
@property (nonatomic) BOOL deflectionEnabled;
@end

@protocol ZDKContainerChildControllerDelegate;

SWIFT_PROTOCOL_NAMED("ContainerChild")
@protocol ZDKContainerChild <NSObject>
@property (nonatomic, strong) id <ZDKContainerChildControllerDelegate> _Nullable childDelegate;
@end

@class UINavigationItem;

SWIFT_PROTOCOL_NAMED("ContainerChildControllerDelegate")
@protocol ZDKContainerChildControllerDelegate <NSObject>
- (void)willDismiss;
@property (nonatomic, readonly, strong) UINavigationItem * _Nullable navItem;
@end

@class NSBundle;
@class NSCoder;

SWIFT_CLASS("_TtC10ZendeskSDK23ContainerViewController")
@interface ContainerViewController : UIViewController
- (void)viewDidLoad;
- (nonnull instancetype)initWithNibName:(NSString * _Nullable)nibNameOrNil bundle:(NSBundle * _Nullable)nibBundleOrNil OBJC_DESIGNATED_INITIALIZER;
- (nullable instancetype)initWithCoder:(NSCoder * _Nonnull)coder OBJC_DESIGNATED_INITIALIZER;
@end


@interface ContainerViewController (SWIFT_EXTENSION(ZendeskSDK)) <ZDKContainerChildControllerDelegate>
@property (nonatomic, readonly, strong) UINavigationItem * _Nullable navItem;
- (void)willDismiss;
@end

@protocol ZDKCoordinator;

SWIFT_CLASS_NAMED("CoordinatingViewController")
@interface ZDKCoordinatingViewController : ContainerViewController
- (nonnull instancetype)initWithCoordinator:(id <ZDKCoordinator> _Nonnull)coordinator OBJC_DESIGNATED_INITIALIZER;
- (nullable instancetype)initWithCoder:(NSCoder * _Nonnull)aDecoder SWIFT_UNAVAILABLE;
- (void)viewDidLoad;
- (void)viewWillAppear:(BOOL)animated;
- (void)viewDidAppear:(BOOL)animated;
- (void)viewDidDisappear:(BOOL)animated;
- (nonnull instancetype)initWithNibName:(NSString * _Nullable)nibNameOrNil bundle:(NSBundle * _Nullable)nibBundleOrNil SWIFT_UNAVAILABLE;
@end


SWIFT_PROTOCOL_NAMED("Coordinator")
@protocol ZDKCoordinator
- (void)startWithPresent:(void (^ _Nonnull)(UIViewController <ZDKContainerChild> * _Nonnull))present with:(id <ZDKContainerChildControllerDelegate> _Nonnull)containerDelegate;
@end

@class UINavigationController;
@class UIBarButtonItem;

SWIFT_CLASS_NAMED("DismissUtil")
@interface ZDKDismissUtil : NSObject
/// Decide based on the contents of the nav stack whether to pop
/// the given view controller off the stack, or whether to
/// dismiss the given view controller.
/// \param viewController a view controller which should be removed from a screen.
///
/// \param navigationController a navigation controller for inspection.
///
+ (void)remove:(UIViewController * _Nullable)viewController from:(UINavigationController * _Nullable)navigationController;
+ (BOOL)navigationController:(UINavigationController * _Nullable)navigationController didPush:(UIViewController * _Nullable)viewController SWIFT_WARN_UNUSED_RESULT;
+ (UIBarButtonItem * _Nonnull)barButtonFor:(UIViewController * _Nonnull)viewController embededIn:(UINavigationController * _Nullable)navigationController action:(SEL _Nonnull)action SWIFT_WARN_UNUSED_RESULT;
- (nonnull instancetype)init OBJC_DESIGNATED_INITIALIZER;
@end

/// Enum that represents the file types that zendesk supports
typedef SWIFT_ENUM_NAMED(NSInteger, ZDKFileType, "FileType", open) {
  ZDKFileTypePng = 0,
  ZDKFileTypeJpg = 1,
  ZDKFileTypePdf = 2,
  ZDKFileTypePlain = 3,
  ZDKFileTypeWord = 4,
  ZDKFileTypeExcel = 5,
  ZDKFileTypePowerpoint = 6,
  ZDKFileTypePowerpointX = 7,
  ZDKFileTypeKeynote = 8,
  ZDKFileTypePages = 9,
  ZDKFileTypeNumbers = 10,
  ZDKFileTypeBinary = 11,
  ZDKFileTypeHeic = 12,
};

@protocol ZDKHelpCenterArticleRatingStateProtocol;

SWIFT_CLASS("_TtC10ZendeskSDK30HelpCenterArticleVotingHandler")
@interface HelpCenterArticleVotingHandler : NSObject <ZDKHelpCenterArticleRatingHandlerProtocol>
- (nonnull instancetype)initWithArticleId:(NSString * _Nonnull)articleId andLocale:(NSString * _Nonnull)locale;
- (void)articleRatingVoteSelected:(id <ZDKHelpCenterArticleRatingStateProtocol> _Nonnull)ratingState atIndex:(NSInteger)index;
- (NSInteger)currentArticleVote SWIFT_WARN_UNUSED_RESULT;
- (nonnull instancetype)init SWIFT_UNAVAILABLE;
+ (nonnull instancetype)new SWIFT_UNAVAILABLE_MSG("-init is unavailable");
@end

@class ZDKZendesk;

SWIFT_CLASS_NAMED("HelpCenterContactUsRouter")
@interface ZDKHelpCenterContactUsRouter : NSObject
- (nonnull instancetype)initWithPresentingViewController:(UIViewController * _Nonnull)presentingViewController uiConfigs:(NSArray<id <ZDKUiConfiguration>> * _Nonnull)uiConfigs zendesk:(ZDKZendesk * _Nonnull)zendesk isDeflectionEnabled:(BOOL)isDeflectionEnabled OBJC_DESIGNATED_INITIALIZER;
- (void)decideButtonActionForNavBar;
- (void)decideButtonActionForEmptySearch;
- (nonnull instancetype)init SWIFT_UNAVAILABLE;
+ (nonnull instancetype)new SWIFT_UNAVAILABLE_MSG("-init is unavailable");
@end


SWIFT_CLASS_NAMED("HelpCenterCoordinator")
@interface ZDKHelpCenterCoordinator : NSObject <ZDKCoordinator>
- (nonnull instancetype)initWithHelpCenterController:(UIViewController <ZDKContainerChild> * _Nonnull)helpCenterController uiConfigurations:(NSArray<id <ZDKUiConfiguration>> * _Nonnull)uiConfigurations OBJC_DESIGNATED_INITIALIZER;
- (void)startWithPresent:(void (^ _Nonnull)(UIViewController <ZDKContainerChild> * _Nonnull))present with:(id <ZDKContainerChildControllerDelegate> _Nonnull)containerDelegate;
- (nonnull instancetype)init SWIFT_UNAVAILABLE;
+ (nonnull instancetype)new SWIFT_UNAVAILABLE_MSG("-init is unavailable");
@end

@class NSNumber;
@class ZDKHelpCenterOverviewContentModel;

/// Data class used to configure Help Center
/// version:
/// 2.0.0
SWIFT_CLASS_NAMED("HelpCenterUiConfiguration")
@interface ZDKHelpCenterUiConfiguration : NSObject <ZDKUiConfiguration>
/// A list of labels to which must be present for an article to show up in the list.
/// The labels combined with AND
/// version:
/// 2.0.0
@property (nonatomic, copy) NSArray<NSString *> * _Nonnull labels;
/// The type of ids being used.
/// version:
/// 2.0.0
@property (nonatomic) ZDKHelpCenterOverviewGroupType groupType;
/// Hide the <code>Contact Support</code> button in the Help Center empty search result screen
/// false by default
/// version:
/// 2.0.0
@property (nonatomic) BOOL hideContactSupport SWIFT_DEPRECATED_MSG("use showContactOptionsOnEmptySearch instead");
/// Show the <code>Contact Support</code> button in the Help Center main screen
/// true by default
/// version:
/// 2.4.0
@property (nonatomic) BOOL showContactOptions;
/// Show the <code>Contact Support</code> button in the Help Center empty search result screen
/// true by default
/// version:
/// 2.4.0
@property (nonatomic) BOOL showContactOptionsOnEmptySearch;
/// The <code>Contact Support</code> button on the Help Center Main screen and the ‘Contact Support’
/// on the Empty Search screen will route to the “Answer Bot” screen, if set to
/// <code>true</code> and the <code>AnswerBot</code> SDK is present. Otherwise, we will route to <code>RequestUI</code> screen.
/// <code>true</code> by default.
/// version:
/// 2.4.0
@property (nonatomic) BOOL deflectionEnabled;
/// A list of ids. Only show articles contained in the categories/sections.
/// version:
/// 2.0.0
@property (nonatomic, copy) NSArray<NSNumber *> * _Nonnull groupIds;
@property (nonatomic, readonly, strong) ZDKHelpCenterOverviewContentModel * _Nonnull overviewContentModel;
/// Returns a default model. To customize the content, update properties on a default model.
/// @return A default content model.
/// version:
/// 2.0.0
- (nonnull instancetype)init OBJC_DESIGNATED_INITIALIZER;
@end






/// Creates an attachment to be uploaded when a request is created
/// version:
/// 2.0.0
SWIFT_CLASS_NAMED("RequestAttachment")
@interface ZDKRequestAttachment : NSObject
/// Name of the file to be uploaded
/// version:
/// 2.0.0
@property (nonatomic, readonly, copy) NSString * _Nonnull filename;
/// Data of the file contents to be uploaded
/// version:
/// 2.0.0
@property (nonatomic, readonly, copy) NSData * _Nonnull data;
/// Type of the file to be uploaded
/// version:
/// 2.0.0
@property (nonatomic, readonly) enum ZDKFileType fileType;
/// Generates a new state from the old state and an action
/// version:
/// 2.0.0
/// \param filename the name of the file to be uploaded, without the file extension
///
/// \param data the data of the contents of the file to be uploaded
///
/// \param fileType the type of the file to be uploaded
///
///
/// returns:
/// an instance of RequestAttachment
- (nonnull instancetype)initWithFilename:(NSString * _Nonnull)filename data:(NSData * _Nonnull)data fileType:(enum ZDKFileType)fileType OBJC_DESIGNATED_INITIALIZER;
- (nonnull instancetype)init SWIFT_UNAVAILABLE;
+ (nonnull instancetype)new SWIFT_UNAVAILABLE_MSG("-init is unavailable");
@end


SWIFT_CLASS("_TtC10ZendeskSDK18RequestCoordinator")
@interface RequestCoordinator : NSObject <ZDKCoordinator>
- (void)startWithPresent:(void (^ _Nonnull)(UIViewController <ZDKContainerChild> * _Nonnull))present with:(id <ZDKContainerChildControllerDelegate> _Nonnull)containerDelegate;
- (nonnull instancetype)init SWIFT_UNAVAILABLE;
+ (nonnull instancetype)new SWIFT_UNAVAILABLE_MSG("-init is unavailable");
@end


/// Used to build view controller for ticketing. The returned objects must be presented inside a UINavigationController.
/// The containing navigation controller can be presented any way you see fit.
/// version:
/// 2.0.0
SWIFT_CLASS_NAMED("RequestUi")
@interface ZDKRequestUi : NSObject
/// Build the Request List. This is a list of a users tickets.
/// Conversations must be enabled in your Zendesk SDK admin settings. Conversations are not available on Essential.
/// version:
/// 2.0.0
+ (UIViewController * _Nonnull)buildRequestList SWIFT_WARN_UNUSED_RESULT;
/// Build the Request List with a list of UiConfigurations.
/// Conversations must be enabled in your Zendesk SDK admin settings. Conversations are not available on Essential.
/// version:
/// 2.0.0
/// \param configurations A list of UiConfiguration objects. You do not need to configure the controller being presented.
///
+ (UIViewController * _Nonnull)buildRequestListWith:(NSArray<id <ZDKUiConfiguration>> * _Nonnull)configurations SWIFT_WARN_UNUSED_RESULT;
/// Build the Request Ui. This allows users to create and respond to individual tickets.
/// version:
/// 2.0.0
+ (UIViewController * _Nonnull)buildRequestUi SWIFT_WARN_UNUSED_RESULT;
/// Build the Request Ui with a list of UiConfigurations.
/// version:
/// 2.0.0
/// \param configurations A list of UiConfiguration objects. You do not need to configure the controller being presented.
///
+ (UIViewController * _Nonnull)buildRequestUiWith:(NSArray<id <ZDKUiConfiguration>> * _Nonnull)configurations SWIFT_WARN_UNUSED_RESULT;
/// Build the Request Ui. This allows users to create and respond to individual tickets.
/// version:
/// 2.0.0
/// \param requestId The ID of the ticket to display.
///
+ (UIViewController * _Nonnull)buildRequestUiWithRequestId:(NSString * _Nonnull)requestId SWIFT_WARN_UNUSED_RESULT;
/// Build the Request Ui with a list of UiConfigurations.
/// version:
/// 2.0.0
/// \param requestId The ID of the ticket to display.
///
/// \param configurations A list of UiConfiguration objects. You do not need to configure the controller being presented.
///
+ (UIViewController * _Nonnull)buildRequestUiWithRequestId:(NSString * _Nonnull)requestId configurations:(NSArray<id <ZDKUiConfiguration>> * _Nonnull)configurations SWIFT_WARN_UNUSED_RESULT;
- (nonnull instancetype)init OBJC_DESIGNATED_INITIALIZER;
@end

@class ZDKCustomField;

/// Data class used to configure Ticketing
/// version:
/// 2.0.0
SWIFT_CLASS_NAMED("RequestUiConfiguration")
@interface ZDKRequestUiConfiguration : NSObject <ZDKUiConfiguration>
/// The Subject of any tickets created
/// version:
/// 2.0.0
@property (nonatomic, copy) NSString * _Nonnull subject;
/// Tags set in any created tickets
/// version:
/// 2.0.0
@property (nonatomic, copy) NSArray<NSString *> * _Nonnull tags;
/// Custom Fields set in any created tickets
/// version:
/// 4.0.0
@property (nonatomic, copy) NSArray<ZDKCustomField *> * _Nonnull customFields;
/// The ticket form of any created tickets.
/// If this property is set <code>fields</code> must also be set. Any ticket fields set will be associated with <code>tickerFormID</code>.
/// version:
/// 2.0.0
@property (nonatomic, strong) NSNumber * _Nullable ticketFormID;
/// A list of RequestAttachments sent with any created tickets.
/// Note: These files are treated as any other. They will be displayed in the UI
/// and the user will be able to remove them.
/// version:
/// 2.0.0
@property (nonatomic, copy) NSArray<ZDKRequestAttachment *> * _Nonnull fileAttachments;
/// Returns a default model. To customisze the content, update properties on a default model.
/// version:
/// 2.0.0
- (nonnull instancetype)init OBJC_DESIGNATED_INITIALIZER;
@end


/// Used to enable <a href="https://github.com/zendesk/Suas-iOS">Suas</a> logging.
/// Suas drives most of the Ticketing UI so the Suas logs can be useful for debugging it.
/// Enabling the Suas logger produces a lot of information and will slow down the SDK.
/// version:
/// 2.0.0
SWIFT_CLASS_NAMED("SuasDebugLogger")
@interface ZDKSuasDebugLogger : NSObject
/// Toggle the Suas debug logging
/// version:
/// 2.0.0
SWIFT_CLASS_PROPERTY(@property (nonatomic, class) BOOL enabled;)
+ (BOOL)enabled SWIFT_WARN_UNUSED_RESULT;
+ (void)setEnabled:(BOOL)newValue;
- (nonnull instancetype)init OBJC_DESIGNATED_INITIALIZER;
@end


SWIFT_CLASS_NAMED("SupportUI")
@interface ZDKSupportUI : NSObject
/// Locale override for help center
@property (nonatomic, copy) NSString * _Nullable helpCenterLocaleOverride;
/// Initialize the SupportUI singleton with the Zendesk singleton
/// from ZendeskCoreSDK
+ (void)initializeWithZendesk:(ZDKZendesk * _Nullable)zendesk;
/// Get the API instance (singleton).
SWIFT_CLASS_PROPERTY(@property (nonatomic, class, readonly, strong) ZDKSupportUI * _Nullable instance;)
+ (ZDKSupportUI * _Nullable)instance SWIFT_WARN_UNUSED_RESULT;
/// This method can be used to aid in handling push notifications relating to requests.
/// This method can result in a dynamic update in the request UI. For this occur,
/// the push notification and the on screen request must contain matching request ids.
/// This method will return true only in the case of a successful UI update.
/// A return value of false means that the push notification was unhandled.
/// At this point you can decided how best to update the user based on the contents of the notification.
/// \param requestId The ID of the request to refresh
///
///
/// returns:
/// A boolean indicating whether the Request Detail Screen has been refresh or not.
- (BOOL)refreshRequestWithRequestId:(NSString * _Nonnull)requestId SWIFT_WARN_UNUSED_RESULT;
- (nonnull instancetype)init SWIFT_UNAVAILABLE;
+ (nonnull instancetype)new SWIFT_UNAVAILABLE_MSG("-init is unavailable");
@end

@class UIColor;

/// Used to style the SDK.
/// Set the currentTheme.primaryColor to style the UI.
/// version:
/// 2.0.0
SWIFT_CLASS_NAMED("Theme")
@interface ZDKTheme : NSObject
/// The theme currently applied to the SDK.
/// version:
/// 2.0.0
SWIFT_CLASS_PROPERTY(@property (nonatomic, class, readonly, strong) ZDKTheme * _Nonnull currentTheme;)
+ (ZDKTheme * _Nonnull)currentTheme SWIFT_WARN_UNUSED_RESULT;
/// The primary color of the SDK.
/// This is applied as a tint to various UI components
/// version:
/// 2.0.0
@property (nonatomic, strong) UIColor * _Nonnull primaryColor;
- (nonnull instancetype)init OBJC_DESIGNATED_INITIALIZER;
@end






























SWIFT_CLASS("_TtC10ZendeskSDK12ZDKConstants")
@interface ZDKConstants : NSObject
+ (UIColor * _Nonnull)colorForToast SWIFT_WARN_UNUSED_RESULT;
- (nonnull instancetype)init OBJC_DESIGNATED_INITIALIZER;
@end





#if __has_attribute(external_source_symbol)
# pragma clang attribute pop
#endif
#pragma clang diagnostic pop

#elif defined(__ARM_ARCH_7A__) && __ARM_ARCH_7A__
// Generated by Apple Swift version 5.1 (swiftlang-1100.0.270.13 clang-1100.0.33.7)
#pragma clang diagnostic push
#pragma clang diagnostic ignored "-Wgcc-compat"

#if !defined(__has_include)
# define __has_include(x) 0
#endif
#if !defined(__has_attribute)
# define __has_attribute(x) 0
#endif
#if !defined(__has_feature)
# define __has_feature(x) 0
#endif
#if !defined(__has_warning)
# define __has_warning(x) 0
#endif

#if __has_include(<swift/objc-prologue.h>)
# include <swift/objc-prologue.h>
#endif

#pragma clang diagnostic ignored "-Wauto-import"
#include <Foundation/Foundation.h>
#include <stdint.h>
#include <stddef.h>
#include <stdbool.h>

#if !defined(SWIFT_TYPEDEFS)
# define SWIFT_TYPEDEFS 1
# if __has_include(<uchar.h>)
#  include <uchar.h>
# elif !defined(__cplusplus)
typedef uint_least16_t char16_t;
typedef uint_least32_t char32_t;
# endif
typedef float swift_float2  __attribute__((__ext_vector_type__(2)));
typedef float swift_float3  __attribute__((__ext_vector_type__(3)));
typedef float swift_float4  __attribute__((__ext_vector_type__(4)));
typedef double swift_double2  __attribute__((__ext_vector_type__(2)));
typedef double swift_double3  __attribute__((__ext_vector_type__(3)));
typedef double swift_double4  __attribute__((__ext_vector_type__(4)));
typedef int swift_int2  __attribute__((__ext_vector_type__(2)));
typedef int swift_int3  __attribute__((__ext_vector_type__(3)));
typedef int swift_int4  __attribute__((__ext_vector_type__(4)));
typedef unsigned int swift_uint2  __attribute__((__ext_vector_type__(2)));
typedef unsigned int swift_uint3  __attribute__((__ext_vector_type__(3)));
typedef unsigned int swift_uint4  __attribute__((__ext_vector_type__(4)));
#endif

#if !defined(SWIFT_PASTE)
# define SWIFT_PASTE_HELPER(x, y) x##y
# define SWIFT_PASTE(x, y) SWIFT_PASTE_HELPER(x, y)
#endif
#if !defined(SWIFT_METATYPE)
# define SWIFT_METATYPE(X) Class
#endif
#if !defined(SWIFT_CLASS_PROPERTY)
# if __has_feature(objc_class_property)
#  define SWIFT_CLASS_PROPERTY(...) __VA_ARGS__
# else
#  define SWIFT_CLASS_PROPERTY(...)
# endif
#endif

#if __has_attribute(objc_runtime_name)
# define SWIFT_RUNTIME_NAME(X) __attribute__((objc_runtime_name(X)))
#else
# define SWIFT_RUNTIME_NAME(X)
#endif
#if __has_attribute(swift_name)
# define SWIFT_COMPILE_NAME(X) __attribute__((swift_name(X)))
#else
# define SWIFT_COMPILE_NAME(X)
#endif
#if __has_attribute(objc_method_family)
# define SWIFT_METHOD_FAMILY(X) __attribute__((objc_method_family(X)))
#else
# define SWIFT_METHOD_FAMILY(X)
#endif
#if __has_attribute(noescape)
# define SWIFT_NOESCAPE __attribute__((noescape))
#else
# define SWIFT_NOESCAPE
#endif
#if __has_attribute(warn_unused_result)
# define SWIFT_WARN_UNUSED_RESULT __attribute__((warn_unused_result))
#else
# define SWIFT_WARN_UNUSED_RESULT
#endif
#if __has_attribute(noreturn)
# define SWIFT_NORETURN __attribute__((noreturn))
#else
# define SWIFT_NORETURN
#endif
#if !defined(SWIFT_CLASS_EXTRA)
# define SWIFT_CLASS_EXTRA
#endif
#if !defined(SWIFT_PROTOCOL_EXTRA)
# define SWIFT_PROTOCOL_EXTRA
#endif
#if !defined(SWIFT_ENUM_EXTRA)
# define SWIFT_ENUM_EXTRA
#endif
#if !defined(SWIFT_CLASS)
# if __has_attribute(objc_subclassing_restricted)
#  define SWIFT_CLASS(SWIFT_NAME) SWIFT_RUNTIME_NAME(SWIFT_NAME) __attribute__((objc_subclassing_restricted)) SWIFT_CLASS_EXTRA
#  define SWIFT_CLASS_NAMED(SWIFT_NAME) __attribute__((objc_subclassing_restricted)) SWIFT_COMPILE_NAME(SWIFT_NAME) SWIFT_CLASS_EXTRA
# else
#  define SWIFT_CLASS(SWIFT_NAME) SWIFT_RUNTIME_NAME(SWIFT_NAME) SWIFT_CLASS_EXTRA
#  define SWIFT_CLASS_NAMED(SWIFT_NAME) SWIFT_COMPILE_NAME(SWIFT_NAME) SWIFT_CLASS_EXTRA
# endif
#endif
#if !defined(SWIFT_RESILIENT_CLASS)
# if __has_attribute(objc_class_stub)
#  define SWIFT_RESILIENT_CLASS(SWIFT_NAME) SWIFT_CLASS(SWIFT_NAME) __attribute__((objc_class_stub))
#  define SWIFT_RESILIENT_CLASS_NAMED(SWIFT_NAME) __attribute__((objc_class_stub)) SWIFT_CLASS_NAMED(SWIFT_NAME)
# else
#  define SWIFT_RESILIENT_CLASS(SWIFT_NAME) SWIFT_CLASS(SWIFT_NAME)
#  define SWIFT_RESILIENT_CLASS_NAMED(SWIFT_NAME) SWIFT_CLASS_NAMED(SWIFT_NAME)
# endif
#endif

#if !defined(SWIFT_PROTOCOL)
# define SWIFT_PROTOCOL(SWIFT_NAME) SWIFT_RUNTIME_NAME(SWIFT_NAME) SWIFT_PROTOCOL_EXTRA
# define SWIFT_PROTOCOL_NAMED(SWIFT_NAME) SWIFT_COMPILE_NAME(SWIFT_NAME) SWIFT_PROTOCOL_EXTRA
#endif

#if !defined(SWIFT_EXTENSION)
# define SWIFT_EXTENSION(M) SWIFT_PASTE(M##_Swift_, __LINE__)
#endif

#if !defined(OBJC_DESIGNATED_INITIALIZER)
# if __has_attribute(objc_designated_initializer)
#  define OBJC_DESIGNATED_INITIALIZER __attribute__((objc_designated_initializer))
# else
#  define OBJC_DESIGNATED_INITIALIZER
# endif
#endif
#if !defined(SWIFT_ENUM_ATTR)
# if defined(__has_attribute) && __has_attribute(enum_extensibility)
#  define SWIFT_ENUM_ATTR(_extensibility) __attribute__((enum_extensibility(_extensibility)))
# else
#  define SWIFT_ENUM_ATTR(_extensibility)
# endif
#endif
#if !defined(SWIFT_ENUM)
# define SWIFT_ENUM(_type, _name, _extensibility) enum _name : _type _name; enum SWIFT_ENUM_ATTR(_extensibility) SWIFT_ENUM_EXTRA _name : _type
# if __has_feature(generalized_swift_name)
#  define SWIFT_ENUM_NAMED(_type, _name, SWIFT_NAME, _extensibility) enum _name : _type _name SWIFT_COMPILE_NAME(SWIFT_NAME); enum SWIFT_COMPILE_NAME(SWIFT_NAME) SWIFT_ENUM_ATTR(_extensibility) SWIFT_ENUM_EXTRA _name : _type
# else
#  define SWIFT_ENUM_NAMED(_type, _name, SWIFT_NAME, _extensibility) SWIFT_ENUM(_type, _name, _extensibility)
# endif
#endif
#if !defined(SWIFT_UNAVAILABLE)
# define SWIFT_UNAVAILABLE __attribute__((unavailable))
#endif
#if !defined(SWIFT_UNAVAILABLE_MSG)
# define SWIFT_UNAVAILABLE_MSG(msg) __attribute__((unavailable(msg)))
#endif
#if !defined(SWIFT_AVAILABILITY)
# define SWIFT_AVAILABILITY(plat, ...) __attribute__((availability(plat, __VA_ARGS__)))
#endif
#if !defined(SWIFT_WEAK_IMPORT)
# define SWIFT_WEAK_IMPORT __attribute__((weak_import))
#endif
#if !defined(SWIFT_DEPRECATED)
# define SWIFT_DEPRECATED __attribute__((deprecated))
#endif
#if !defined(SWIFT_DEPRECATED_MSG)
# define SWIFT_DEPRECATED_MSG(...) __attribute__((deprecated(__VA_ARGS__)))
#endif
#if __has_feature(attribute_diagnose_if_objc)
# define SWIFT_DEPRECATED_OBJC(Msg) __attribute__((diagnose_if(1, Msg, "warning")))
#else
# define SWIFT_DEPRECATED_OBJC(Msg) SWIFT_DEPRECATED_MSG(Msg)
#endif
#if !defined(IBSegueAction)
# define IBSegueAction
#endif
#if __has_feature(modules)
#if __has_warning("-Watimport-in-framework-header")
#pragma clang diagnostic ignored "-Watimport-in-framework-header"
#endif
@import AVFoundation;
@import CommonUISDK;
@import Foundation;
@import ObjectiveC;
@import UIKit;
@import ZendeskProviderSDK;
#endif

#import <ZendeskSDK/ZendeskSDK.h>

#pragma clang diagnostic ignored "-Wproperty-attribute-mismatch"
#pragma clang diagnostic ignored "-Wduplicate-method-arg"
#if __has_warning("-Wpragma-clang-attribute")
# pragma clang diagnostic ignored "-Wpragma-clang-attribute"
#endif
#pragma clang diagnostic ignored "-Wunknown-pragmas"
#pragma clang diagnostic ignored "-Wnullability"

#if __has_attribute(external_source_symbol)
# pragma push_macro("any")
# undef any
# pragma clang attribute push(__attribute__((external_source_symbol(language="Swift", defined_in="ZendeskSDK",generated_declaration))), apply_to=any(function,enum,objc_interface,objc_category,objc_protocol))
# pragma pop_macro("any")
#endif








/// Data class used to configure Article Screen
/// version:
/// 2.3.0
SWIFT_CLASS_NAMED("ArticleUiConfiguration")
@interface ZDKArticleUiConfiguration : NSObject <ZDKUiConfiguration>
- (nonnull instancetype)init OBJC_DESIGNATED_INITIALIZER;
/// Show the <code>Contact Support</code> button in the help center’s article view
/// version:
/// 2.3.0
@property (nonatomic) BOOL showContactOptions;
/// Hide the <code>Contact Support</code> button in the help center’s article views
/// version:
/// 2.3.0
@property (nonatomic) BOOL hideContactSupport SWIFT_DEPRECATED_MSG("use showContactOptions instead");
/// The <code>Contact Support</code> button on the Help Center Article screen will route to the “Answer Bot” screen,
/// if set to <code>true</code> and the <code>AnswerBot</code> SDK is present. Otherwise, we will route to <code>RequestUI</code> screen.
/// <code>true</code> by default
/// version:
/// 2.4.0
@property (nonatomic) BOOL deflectionEnabled;
@end

@protocol ZDKContainerChildControllerDelegate;

SWIFT_PROTOCOL_NAMED("ContainerChild")
@protocol ZDKContainerChild <NSObject>
@property (nonatomic, strong) id <ZDKContainerChildControllerDelegate> _Nullable childDelegate;
@end

@class UINavigationItem;

SWIFT_PROTOCOL_NAMED("ContainerChildControllerDelegate")
@protocol ZDKContainerChildControllerDelegate <NSObject>
- (void)willDismiss;
@property (nonatomic, readonly, strong) UINavigationItem * _Nullable navItem;
@end

@class NSBundle;
@class NSCoder;

SWIFT_CLASS("_TtC10ZendeskSDK23ContainerViewController")
@interface ContainerViewController : UIViewController
- (void)viewDidLoad;
- (nonnull instancetype)initWithNibName:(NSString * _Nullable)nibNameOrNil bundle:(NSBundle * _Nullable)nibBundleOrNil OBJC_DESIGNATED_INITIALIZER;
- (nullable instancetype)initWithCoder:(NSCoder * _Nonnull)coder OBJC_DESIGNATED_INITIALIZER;
@end


@interface ContainerViewController (SWIFT_EXTENSION(ZendeskSDK)) <ZDKContainerChildControllerDelegate>
@property (nonatomic, readonly, strong) UINavigationItem * _Nullable navItem;
- (void)willDismiss;
@end

@protocol ZDKCoordinator;

SWIFT_CLASS_NAMED("CoordinatingViewController")
@interface ZDKCoordinatingViewController : ContainerViewController
- (nonnull instancetype)initWithCoordinator:(id <ZDKCoordinator> _Nonnull)coordinator OBJC_DESIGNATED_INITIALIZER;
- (nullable instancetype)initWithCoder:(NSCoder * _Nonnull)aDecoder SWIFT_UNAVAILABLE;
- (void)viewDidLoad;
- (void)viewWillAppear:(BOOL)animated;
- (void)viewDidAppear:(BOOL)animated;
- (void)viewDidDisappear:(BOOL)animated;
- (nonnull instancetype)initWithNibName:(NSString * _Nullable)nibNameOrNil bundle:(NSBundle * _Nullable)nibBundleOrNil SWIFT_UNAVAILABLE;
@end


SWIFT_PROTOCOL_NAMED("Coordinator")
@protocol ZDKCoordinator
- (void)startWithPresent:(void (^ _Nonnull)(UIViewController <ZDKContainerChild> * _Nonnull))present with:(id <ZDKContainerChildControllerDelegate> _Nonnull)containerDelegate;
@end

@class UINavigationController;
@class UIBarButtonItem;

SWIFT_CLASS_NAMED("DismissUtil")
@interface ZDKDismissUtil : NSObject
/// Decide based on the contents of the nav stack whether to pop
/// the given view controller off the stack, or whether to
/// dismiss the given view controller.
/// \param viewController a view controller which should be removed from a screen.
///
/// \param navigationController a navigation controller for inspection.
///
+ (void)remove:(UIViewController * _Nullable)viewController from:(UINavigationController * _Nullable)navigationController;
+ (BOOL)navigationController:(UINavigationController * _Nullable)navigationController didPush:(UIViewController * _Nullable)viewController SWIFT_WARN_UNUSED_RESULT;
+ (UIBarButtonItem * _Nonnull)barButtonFor:(UIViewController * _Nonnull)viewController embededIn:(UINavigationController * _Nullable)navigationController action:(SEL _Nonnull)action SWIFT_WARN_UNUSED_RESULT;
- (nonnull instancetype)init OBJC_DESIGNATED_INITIALIZER;
@end

/// Enum that represents the file types that zendesk supports
typedef SWIFT_ENUM_NAMED(NSInteger, ZDKFileType, "FileType", open) {
  ZDKFileTypePng = 0,
  ZDKFileTypeJpg = 1,
  ZDKFileTypePdf = 2,
  ZDKFileTypePlain = 3,
  ZDKFileTypeWord = 4,
  ZDKFileTypeExcel = 5,
  ZDKFileTypePowerpoint = 6,
  ZDKFileTypePowerpointX = 7,
  ZDKFileTypeKeynote = 8,
  ZDKFileTypePages = 9,
  ZDKFileTypeNumbers = 10,
  ZDKFileTypeBinary = 11,
  ZDKFileTypeHeic = 12,
};

@protocol ZDKHelpCenterArticleRatingStateProtocol;

SWIFT_CLASS("_TtC10ZendeskSDK30HelpCenterArticleVotingHandler")
@interface HelpCenterArticleVotingHandler : NSObject <ZDKHelpCenterArticleRatingHandlerProtocol>
- (nonnull instancetype)initWithArticleId:(NSString * _Nonnull)articleId andLocale:(NSString * _Nonnull)locale;
- (void)articleRatingVoteSelected:(id <ZDKHelpCenterArticleRatingStateProtocol> _Nonnull)ratingState atIndex:(NSInteger)index;
- (NSInteger)currentArticleVote SWIFT_WARN_UNUSED_RESULT;
- (nonnull instancetype)init SWIFT_UNAVAILABLE;
+ (nonnull instancetype)new SWIFT_UNAVAILABLE_MSG("-init is unavailable");
@end

@class ZDKZendesk;

SWIFT_CLASS_NAMED("HelpCenterContactUsRouter")
@interface ZDKHelpCenterContactUsRouter : NSObject
- (nonnull instancetype)initWithPresentingViewController:(UIViewController * _Nonnull)presentingViewController uiConfigs:(NSArray<id <ZDKUiConfiguration>> * _Nonnull)uiConfigs zendesk:(ZDKZendesk * _Nonnull)zendesk isDeflectionEnabled:(BOOL)isDeflectionEnabled OBJC_DESIGNATED_INITIALIZER;
- (void)decideButtonActionForNavBar;
- (void)decideButtonActionForEmptySearch;
- (nonnull instancetype)init SWIFT_UNAVAILABLE;
+ (nonnull instancetype)new SWIFT_UNAVAILABLE_MSG("-init is unavailable");
@end


SWIFT_CLASS_NAMED("HelpCenterCoordinator")
@interface ZDKHelpCenterCoordinator : NSObject <ZDKCoordinator>
- (nonnull instancetype)initWithHelpCenterController:(UIViewController <ZDKContainerChild> * _Nonnull)helpCenterController uiConfigurations:(NSArray<id <ZDKUiConfiguration>> * _Nonnull)uiConfigurations OBJC_DESIGNATED_INITIALIZER;
- (void)startWithPresent:(void (^ _Nonnull)(UIViewController <ZDKContainerChild> * _Nonnull))present with:(id <ZDKContainerChildControllerDelegate> _Nonnull)containerDelegate;
- (nonnull instancetype)init SWIFT_UNAVAILABLE;
+ (nonnull instancetype)new SWIFT_UNAVAILABLE_MSG("-init is unavailable");
@end

@class NSNumber;
@class ZDKHelpCenterOverviewContentModel;

/// Data class used to configure Help Center
/// version:
/// 2.0.0
SWIFT_CLASS_NAMED("HelpCenterUiConfiguration")
@interface ZDKHelpCenterUiConfiguration : NSObject <ZDKUiConfiguration>
/// A list of labels to which must be present for an article to show up in the list.
/// The labels combined with AND
/// version:
/// 2.0.0
@property (nonatomic, copy) NSArray<NSString *> * _Nonnull labels;
/// The type of ids being used.
/// version:
/// 2.0.0
@property (nonatomic) ZDKHelpCenterOverviewGroupType groupType;
/// Hide the <code>Contact Support</code> button in the Help Center empty search result screen
/// false by default
/// version:
/// 2.0.0
@property (nonatomic) BOOL hideContactSupport SWIFT_DEPRECATED_MSG("use showContactOptionsOnEmptySearch instead");
/// Show the <code>Contact Support</code> button in the Help Center main screen
/// true by default
/// version:
/// 2.4.0
@property (nonatomic) BOOL showContactOptions;
/// Show the <code>Contact Support</code> button in the Help Center empty search result screen
/// true by default
/// version:
/// 2.4.0
@property (nonatomic) BOOL showContactOptionsOnEmptySearch;
/// The <code>Contact Support</code> button on the Help Center Main screen and the ‘Contact Support’
/// on the Empty Search screen will route to the “Answer Bot” screen, if set to
/// <code>true</code> and the <code>AnswerBot</code> SDK is present. Otherwise, we will route to <code>RequestUI</code> screen.
/// <code>true</code> by default.
/// version:
/// 2.4.0
@property (nonatomic) BOOL deflectionEnabled;
/// A list of ids. Only show articles contained in the categories/sections.
/// version:
/// 2.0.0
@property (nonatomic, copy) NSArray<NSNumber *> * _Nonnull groupIds;
@property (nonatomic, readonly, strong) ZDKHelpCenterOverviewContentModel * _Nonnull overviewContentModel;
/// Returns a default model. To customize the content, update properties on a default model.
/// @return A default content model.
/// version:
/// 2.0.0
- (nonnull instancetype)init OBJC_DESIGNATED_INITIALIZER;
@end






/// Creates an attachment to be uploaded when a request is created
/// version:
/// 2.0.0
SWIFT_CLASS_NAMED("RequestAttachment")
@interface ZDKRequestAttachment : NSObject
/// Name of the file to be uploaded
/// version:
/// 2.0.0
@property (nonatomic, readonly, copy) NSString * _Nonnull filename;
/// Data of the file contents to be uploaded
/// version:
/// 2.0.0
@property (nonatomic, readonly, copy) NSData * _Nonnull data;
/// Type of the file to be uploaded
/// version:
/// 2.0.0
@property (nonatomic, readonly) enum ZDKFileType fileType;
/// Generates a new state from the old state and an action
/// version:
/// 2.0.0
/// \param filename the name of the file to be uploaded, without the file extension
///
/// \param data the data of the contents of the file to be uploaded
///
/// \param fileType the type of the file to be uploaded
///
///
/// returns:
/// an instance of RequestAttachment
- (nonnull instancetype)initWithFilename:(NSString * _Nonnull)filename data:(NSData * _Nonnull)data fileType:(enum ZDKFileType)fileType OBJC_DESIGNATED_INITIALIZER;
- (nonnull instancetype)init SWIFT_UNAVAILABLE;
+ (nonnull instancetype)new SWIFT_UNAVAILABLE_MSG("-init is unavailable");
@end


SWIFT_CLASS("_TtC10ZendeskSDK18RequestCoordinator")
@interface RequestCoordinator : NSObject <ZDKCoordinator>
- (void)startWithPresent:(void (^ _Nonnull)(UIViewController <ZDKContainerChild> * _Nonnull))present with:(id <ZDKContainerChildControllerDelegate> _Nonnull)containerDelegate;
- (nonnull instancetype)init SWIFT_UNAVAILABLE;
+ (nonnull instancetype)new SWIFT_UNAVAILABLE_MSG("-init is unavailable");
@end


/// Used to build view controller for ticketing. The returned objects must be presented inside a UINavigationController.
/// The containing navigation controller can be presented any way you see fit.
/// version:
/// 2.0.0
SWIFT_CLASS_NAMED("RequestUi")
@interface ZDKRequestUi : NSObject
/// Build the Request List. This is a list of a users tickets.
/// Conversations must be enabled in your Zendesk SDK admin settings. Conversations are not available on Essential.
/// version:
/// 2.0.0
+ (UIViewController * _Nonnull)buildRequestList SWIFT_WARN_UNUSED_RESULT;
/// Build the Request List with a list of UiConfigurations.
/// Conversations must be enabled in your Zendesk SDK admin settings. Conversations are not available on Essential.
/// version:
/// 2.0.0
/// \param configurations A list of UiConfiguration objects. You do not need to configure the controller being presented.
///
+ (UIViewController * _Nonnull)buildRequestListWith:(NSArray<id <ZDKUiConfiguration>> * _Nonnull)configurations SWIFT_WARN_UNUSED_RESULT;
/// Build the Request Ui. This allows users to create and respond to individual tickets.
/// version:
/// 2.0.0
+ (UIViewController * _Nonnull)buildRequestUi SWIFT_WARN_UNUSED_RESULT;
/// Build the Request Ui with a list of UiConfigurations.
/// version:
/// 2.0.0
/// \param configurations A list of UiConfiguration objects. You do not need to configure the controller being presented.
///
+ (UIViewController * _Nonnull)buildRequestUiWith:(NSArray<id <ZDKUiConfiguration>> * _Nonnull)configurations SWIFT_WARN_UNUSED_RESULT;
/// Build the Request Ui. This allows users to create and respond to individual tickets.
/// version:
/// 2.0.0
/// \param requestId The ID of the ticket to display.
///
+ (UIViewController * _Nonnull)buildRequestUiWithRequestId:(NSString * _Nonnull)requestId SWIFT_WARN_UNUSED_RESULT;
/// Build the Request Ui with a list of UiConfigurations.
/// version:
/// 2.0.0
/// \param requestId The ID of the ticket to display.
///
/// \param configurations A list of UiConfiguration objects. You do not need to configure the controller being presented.
///
+ (UIViewController * _Nonnull)buildRequestUiWithRequestId:(NSString * _Nonnull)requestId configurations:(NSArray<id <ZDKUiConfiguration>> * _Nonnull)configurations SWIFT_WARN_UNUSED_RESULT;
- (nonnull instancetype)init OBJC_DESIGNATED_INITIALIZER;
@end

@class ZDKCustomField;

/// Data class used to configure Ticketing
/// version:
/// 2.0.0
SWIFT_CLASS_NAMED("RequestUiConfiguration")
@interface ZDKRequestUiConfiguration : NSObject <ZDKUiConfiguration>
/// The Subject of any tickets created
/// version:
/// 2.0.0
@property (nonatomic, copy) NSString * _Nonnull subject;
/// Tags set in any created tickets
/// version:
/// 2.0.0
@property (nonatomic, copy) NSArray<NSString *> * _Nonnull tags;
/// Custom Fields set in any created tickets
/// version:
/// 4.0.0
@property (nonatomic, copy) NSArray<ZDKCustomField *> * _Nonnull customFields;
/// The ticket form of any created tickets.
/// If this property is set <code>fields</code> must also be set. Any ticket fields set will be associated with <code>tickerFormID</code>.
/// version:
/// 2.0.0
@property (nonatomic, strong) NSNumber * _Nullable ticketFormID;
/// A list of RequestAttachments sent with any created tickets.
/// Note: These files are treated as any other. They will be displayed in the UI
/// and the user will be able to remove them.
/// version:
/// 2.0.0
@property (nonatomic, copy) NSArray<ZDKRequestAttachment *> * _Nonnull fileAttachments;
/// Returns a default model. To customisze the content, update properties on a default model.
/// version:
/// 2.0.0
- (nonnull instancetype)init OBJC_DESIGNATED_INITIALIZER;
@end


/// Used to enable <a href="https://github.com/zendesk/Suas-iOS">Suas</a> logging.
/// Suas drives most of the Ticketing UI so the Suas logs can be useful for debugging it.
/// Enabling the Suas logger produces a lot of information and will slow down the SDK.
/// version:
/// 2.0.0
SWIFT_CLASS_NAMED("SuasDebugLogger")
@interface ZDKSuasDebugLogger : NSObject
/// Toggle the Suas debug logging
/// version:
/// 2.0.0
SWIFT_CLASS_PROPERTY(@property (nonatomic, class) BOOL enabled;)
+ (BOOL)enabled SWIFT_WARN_UNUSED_RESULT;
+ (void)setEnabled:(BOOL)newValue;
- (nonnull instancetype)init OBJC_DESIGNATED_INITIALIZER;
@end


SWIFT_CLASS_NAMED("SupportUI")
@interface ZDKSupportUI : NSObject
/// Locale override for help center
@property (nonatomic, copy) NSString * _Nullable helpCenterLocaleOverride;
/// Initialize the SupportUI singleton with the Zendesk singleton
/// from ZendeskCoreSDK
+ (void)initializeWithZendesk:(ZDKZendesk * _Nullable)zendesk;
/// Get the API instance (singleton).
SWIFT_CLASS_PROPERTY(@property (nonatomic, class, readonly, strong) ZDKSupportUI * _Nullable instance;)
+ (ZDKSupportUI * _Nullable)instance SWIFT_WARN_UNUSED_RESULT;
/// This method can be used to aid in handling push notifications relating to requests.
/// This method can result in a dynamic update in the request UI. For this occur,
/// the push notification and the on screen request must contain matching request ids.
/// This method will return true only in the case of a successful UI update.
/// A return value of false means that the push notification was unhandled.
/// At this point you can decided how best to update the user based on the contents of the notification.
/// \param requestId The ID of the request to refresh
///
///
/// returns:
/// A boolean indicating whether the Request Detail Screen has been refresh or not.
- (BOOL)refreshRequestWithRequestId:(NSString * _Nonnull)requestId SWIFT_WARN_UNUSED_RESULT;
- (nonnull instancetype)init SWIFT_UNAVAILABLE;
+ (nonnull instancetype)new SWIFT_UNAVAILABLE_MSG("-init is unavailable");
@end

@class UIColor;

/// Used to style the SDK.
/// Set the currentTheme.primaryColor to style the UI.
/// version:
/// 2.0.0
SWIFT_CLASS_NAMED("Theme")
@interface ZDKTheme : NSObject
/// The theme currently applied to the SDK.
/// version:
/// 2.0.0
SWIFT_CLASS_PROPERTY(@property (nonatomic, class, readonly, strong) ZDKTheme * _Nonnull currentTheme;)
+ (ZDKTheme * _Nonnull)currentTheme SWIFT_WARN_UNUSED_RESULT;
/// The primary color of the SDK.
/// This is applied as a tint to various UI components
/// version:
/// 2.0.0
@property (nonatomic, strong) UIColor * _Nonnull primaryColor;
- (nonnull instancetype)init OBJC_DESIGNATED_INITIALIZER;
@end






























SWIFT_CLASS("_TtC10ZendeskSDK12ZDKConstants")
@interface ZDKConstants : NSObject
+ (UIColor * _Nonnull)colorForToast SWIFT_WARN_UNUSED_RESULT;
- (nonnull instancetype)init OBJC_DESIGNATED_INITIALIZER;
@end





#if __has_attribute(external_source_symbol)
# pragma clang attribute pop
#endif
#pragma clang diagnostic pop

#endif
#endif
